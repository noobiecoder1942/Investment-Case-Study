<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0416.1335                               -->
<workbook original-version='18.1' source-build='2018.1.0 (20181.18.0416.1335)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='master_frame' inline='true' name='federated.0i6w0l61ft8wlr19si1eb1ex1r0n' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='master_frame' name='textscan.1rv50pb0bvnisy15pjx261u74r4s'>
            <connection class='textscan' directory='C:/HardDisk/Documents/My_Data/Data_Science/IITBDS/Investment Case Study' filename='master_frame.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1rv50pb0bvnisy15pjx261u74r4s' name='master_frame.csv' table='[master_frame#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='primary_sector' ordinal='0' />
            <column datatype='string' name='permalink' ordinal='1' />
            <column datatype='string' name='name' ordinal='2' />
            <column datatype='string' name='homepage_url' ordinal='3' />
            <column datatype='string' name='category_list' ordinal='4' />
            <column datatype='string' name='status' ordinal='5' />
            <column datatype='string' name='country_code' ordinal='6' />
            <column datatype='string' name='state_code' ordinal='7' />
            <column datatype='string' name='region' ordinal='8' />
            <column datatype='string' name='city' ordinal='9' />
            <column datatype='date' name='founded_at' ordinal='10' />
            <column datatype='string' name='funding_round_permalink' ordinal='11' />
            <column datatype='string' name='funding_round_type' ordinal='12' />
            <column datatype='string' name='funding_round_code' ordinal='13' />
            <column datatype='date' name='funded_at' ordinal='14' />
            <column datatype='real' name='raised_amount_usd' ordinal='15' />
            <column datatype='string' name='main_sectors' ordinal='16' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>primary_sector</remote-name>
            <remote-type>129</remote-type>
            <local-name>[primary_sector]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>primary_sector</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>permalink</remote-name>
            <remote-type>129</remote-type>
            <local-name>[permalink]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>permalink</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>homepage_url</remote-name>
            <remote-type>129</remote-type>
            <local-name>[homepage_url]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>homepage_url</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_list</remote-name>
            <remote-type>129</remote-type>
            <local-name>[category_list]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>category_list</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>status</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>country_code</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_code]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>state_code</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>founded_at</remote-name>
            <remote-type>133</remote-type>
            <local-name>[founded_at]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>founded_at</remote-alias>
            <ordinal>10</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>funding_round_permalink</remote-name>
            <remote-type>129</remote-type>
            <local-name>[funding_round_permalink]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>funding_round_permalink</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>funding_round_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[funding_round_type]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>funding_round_type</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>funding_round_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[funding_round_code]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>funding_round_code</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>funded_at</remote-name>
            <remote-type>133</remote-type>
            <local-name>[funded_at]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>funded_at</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>raised_amount_usd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[raised_amount_usd]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>raised_amount_usd</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>main_sectors</remote-name>
            <remote-type>129</remote-type>
            <local-name>[main_sectors]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>main_sectors</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='FractionOfTotalInvestments' datatype='real' name='[Calculation_499055197794951172]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([raised_amount_usd])/TOTAL(SUM([raised_amount_usd]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Calculation1' datatype='integer' name='[Calculation_499055197808287750]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SIZE()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Category List' datatype='string' name='[category_list]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Founded At' datatype='date' name='[founded_at]' role='dimension' type='ordinal' />
      <column caption='Funded At' datatype='date' name='[funded_at]' role='dimension' type='ordinal' />
      <column caption='Funding Round Code' datatype='string' name='[funding_round_code]' role='dimension' type='nominal' />
      <column caption='Funding Round Permalink' datatype='string' name='[funding_round_permalink]' role='dimension' type='nominal' />
      <column caption='Funding Round Type' datatype='string' name='[funding_round_type]' role='dimension' type='nominal' />
      <column caption='Homepage Url' datatype='string' name='[homepage_url]' role='dimension' type='nominal' />
      <column caption='Main Sectors' datatype='string' name='[main_sectors]' role='dimension' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Permalink' datatype='string' name='[permalink]' role='dimension' type='nominal' />
      <column caption='Primary Sector' datatype='string' name='[primary_sector]' role='dimension' type='nominal' />
      <column caption='Raised Amount Usd' datatype='real' name='[raised_amount_usd]' role='measure' type='quantitative' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='State Code' datatype='string' name='[state_code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
      <column-instance column='[funding_round_type]' derivation='Attribute' name='[attr:funding_round_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[main_sectors]' derivation='CountD' name='[ctd:main_sectors:qk]' pivot='key' type='quantitative' />
      <column-instance column='[main_sectors]' derivation='CountD' name='[diff:ctd:main_sectors:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[country_code]' derivation='None' name='[none:country_code:nk]' pivot='key' type='nominal' />
      <column-instance column='[funding_round_type]' derivation='None' name='[none:funding_round_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[main_sectors]' derivation='None' name='[none:main_sectors:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='country_code, state_code, city'>
          <field>[country_code]</field>
          <field>[state_code]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.776722' measure-ordering='alphabetic' measure-percentage='0.223278' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:funding_round_type:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;private_equity&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;angel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;grant&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;undisclosed&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;product_crowdfunding&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;non_equity_assistance&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;convertible_note&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;post_ipo_debt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;venture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;secondary_market&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;post_ipo_equity&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;debt_financing&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;seed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;equity_crowdfunding&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[ctd:main_sectors:qk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Cleantech...Semiconductors&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Entertainment&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Automotive...Sports&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;News..Search.and.Messaging&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Social..Finance..Analytics..Advertising&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Health&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[diff:ctd:main_sectors:qk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Cleantech...Semiconductors&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Entertainment&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Automotive...Sports&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;News..Search.and.Messaging&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Social..Finance..Analytics..Advertising&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Health&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:main_sectors:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Cleantech...Semiconductors&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Entertainment&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Automotive...Sports&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;News..Search.and.Messaging&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Social..Finance..Analytics..Advertising&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Health&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:funding_round_type:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;private_equity&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;angel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;grant&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;undisclosed&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;product_crowdfunding&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;non_equity_assistance&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;convertible_note&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;post_ipo_debt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;venture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;secondary_market&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;post_ipo_equity&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;debt_financing&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;seed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;equity_crowdfunding&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country_code:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LIE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MOZ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PRT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TUN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HKG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KEN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SGP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MUS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BWA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EST&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MLT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TWN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CRI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DNK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LBN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MAF&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NGA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LVA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MMR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RUS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ZAF&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KNA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LAO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BMU&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GRC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SAU&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;VNM&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BAH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GIB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IDN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BGD&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BHR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CHL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FIN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GGY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JOR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MKD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CYM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NLD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PRI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SVN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DEU&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KWT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LTU&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PAN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HRV&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KOR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RWA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;URY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EGY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GTM&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HUN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TTO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ARE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CHE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ECU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TAN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MYS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ROM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;UGA&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='master_frame_5M_15M' inline='true' name='federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='master_frame' name='textscan.1rv50pb0bvnisy15pjx261u74r4s (copy)'>
            <connection class='textscan' directory='C:/HardDisk/Documents/My_Data/Data_Science/IITBDS/Investment Case Study' filename='master_frame.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1rv50pb0bvnisy15pjx261u74r4s (copy)' name='master_frame.csv' table='[master_frame#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='primary_sector' ordinal='0' />
            <column datatype='string' name='permalink' ordinal='1' />
            <column datatype='string' name='name' ordinal='2' />
            <column datatype='string' name='homepage_url' ordinal='3' />
            <column datatype='string' name='category_list' ordinal='4' />
            <column datatype='string' name='status' ordinal='5' />
            <column datatype='string' name='country_code' ordinal='6' />
            <column datatype='string' name='state_code' ordinal='7' />
            <column datatype='string' name='region' ordinal='8' />
            <column datatype='string' name='city' ordinal='9' />
            <column datatype='date' name='founded_at' ordinal='10' />
            <column datatype='string' name='funding_round_permalink' ordinal='11' />
            <column datatype='string' name='funding_round_type' ordinal='12' />
            <column datatype='string' name='funding_round_code' ordinal='13' />
            <column datatype='date' name='funded_at' ordinal='14' />
            <column datatype='real' name='raised_amount_usd' ordinal='15' />
            <column datatype='string' name='main_sectors' ordinal='16' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>primary_sector</remote-name>
            <remote-type>129</remote-type>
            <local-name>[primary_sector]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>primary_sector</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>permalink</remote-name>
            <remote-type>129</remote-type>
            <local-name>[permalink]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>permalink</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>homepage_url</remote-name>
            <remote-type>129</remote-type>
            <local-name>[homepage_url]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>homepage_url</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_list</remote-name>
            <remote-type>129</remote-type>
            <local-name>[category_list]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>category_list</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>status</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>country_code</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_code]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>state_code</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>founded_at</remote-name>
            <remote-type>133</remote-type>
            <local-name>[founded_at]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>founded_at</remote-alias>
            <ordinal>10</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>funding_round_permalink</remote-name>
            <remote-type>129</remote-type>
            <local-name>[funding_round_permalink]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>funding_round_permalink</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>funding_round_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[funding_round_type]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>funding_round_type</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>funding_round_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[funding_round_code]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>funding_round_code</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>funded_at</remote-name>
            <remote-type>133</remote-type>
            <local-name>[funded_at]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>funded_at</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>raised_amount_usd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[raised_amount_usd]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>raised_amount_usd</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>main_sectors</remote-name>
            <remote-type>129</remote-type>
            <local-name>[main_sectors]</local-name>
            <parent-name>[master_frame.csv]</parent-name>
            <remote-alias>main_sectors</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='FractionOfTotalInvestments' datatype='real' name='[Calculation_499055197794951172]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([raised_amount_usd])/TOTAL(SUM([raised_amount_usd]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Calculation1' datatype='integer' name='[Calculation_499055197808287750]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SIZE()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Category List' datatype='string' name='[category_list]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Founded At' datatype='date' name='[founded_at]' role='dimension' type='ordinal' />
      <column caption='Funded At' datatype='date' name='[funded_at]' role='dimension' type='ordinal' />
      <column caption='Funding Round Code' datatype='string' name='[funding_round_code]' role='dimension' type='nominal' />
      <column caption='Funding Round Permalink' datatype='string' name='[funding_round_permalink]' role='dimension' type='nominal' />
      <column caption='Funding Round Type' datatype='string' name='[funding_round_type]' role='dimension' type='nominal' />
      <column caption='Homepage Url' datatype='string' name='[homepage_url]' role='dimension' type='nominal' />
      <column caption='Main Sectors' datatype='string' name='[main_sectors]' role='dimension' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Permalink' datatype='string' name='[permalink]' role='dimension' type='nominal' />
      <column caption='Primary Sector' datatype='string' name='[primary_sector]' role='dimension' type='nominal' />
      <column caption='Raised Amount Usd' datatype='real' name='[raised_amount_usd]' role='measure' type='quantitative' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='State Code' datatype='string' name='[state_code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
      <column-instance column='[funding_round_type]' derivation='Attribute' name='[attr:funding_round_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[country_code]' derivation='None' name='[none:country_code:nk]' pivot='key' type='nominal' />
      <column-instance column='[funding_round_type]' derivation='None' name='[none:funding_round_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[main_sectors]' derivation='None' name='[none:main_sectors:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='country_code, state_code, city'>
          <field>[country_code]</field>
          <field>[state_code]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.776722' measure-ordering='alphabetic' measure-percentage='0.223278' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:funding_round_type:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;private_equity&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;angel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;grant&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;undisclosed&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;product_crowdfunding&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;non_equity_assistance&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;convertible_note&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;post_ipo_debt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;venture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;secondary_market&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;post_ipo_equity&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;debt_financing&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;seed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;equity_crowdfunding&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:funding_round_type:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;private_equity&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;angel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;grant&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;undisclosed&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;product_crowdfunding&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;non_equity_assistance&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;convertible_note&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;post_ipo_debt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;venture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;secondary_market&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;post_ipo_equity&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;debt_financing&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;seed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;equity_crowdfunding&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country_code:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LIE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MOZ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PRT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TUN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HKG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KEN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SGP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MUS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BWA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EST&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MLT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TWN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CRI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DNK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LBN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MAF&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NGA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LVA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MMR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RUS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ZAF&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KNA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LAO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BMU&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GRC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SAU&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;VNM&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BAH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GIB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IDN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BGD&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BHR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CHL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FIN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GGY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JOR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MKD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CYM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NLD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PRI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SVN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DEU&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KWT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LTU&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PAN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HRV&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KOR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RWA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;URY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EGY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GTM&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HUN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TTO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ARE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CHE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ECU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TAN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MYS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ROM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;UGA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:main_sectors:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Cleantech...Semiconductors&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Entertainment&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Automotive...Sports&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;News..Search.and.Messaging&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Social..Finance..Analytics..Advertising&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Health&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <filter class='quantitative' column='[raised_amount_usd]' filter-group='2' included-values='in-range'>
        <min>5000000.0</min>
        <max>15000000.0</max>
      </filter>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Question_2' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Country Code' />
        <param name='target' value='Question_2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Plot_1.1_Piechart'>
      <table>
        <view>
          <datasources>
            <datasource caption='master_frame' name='federated.0i6w0l61ft8wlr19si1eb1ex1r0n' />
          </datasources>
          <datasource-dependencies datasource='federated.0i6w0l61ft8wlr19si1eb1ex1r0n'>
            <column caption='FractionOfTotalInvestments' datatype='real' name='[Calculation_499055197794951172]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([raised_amount_usd])/TOTAL(SUM([raised_amount_usd]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[raised_amount_usd]' derivation='Avg' name='[avg:raised_amount_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Funding Round Type' datatype='string' name='[funding_round_type]' role='dimension' type='nominal' />
            <column-instance column='[funding_round_type]' derivation='None' name='[none:funding_round_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[raised_amount_usd]' derivation='Sum' name='[pcto:sum:raised_amount_usd:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Raised Amount Usd' datatype='real' name='[raised_amount_usd]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_499055197794951172]' derivation='User' name='[usr:Calculation_499055197794951172:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]' />
              <size column='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[usr:Calculation_499055197794951172:qk]' />
              <text column='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[usr:Calculation_499055197794951172:qk]' />
              <text column='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[avg:raised_amount_usd:qk]' />
              <text column='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[avg:raised_amount_usd:qk]</field>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]</field>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[pcto:sum:raised_amount_usd:qk:1]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1466013.2470341939</value>
                <value>&quot;convertible_note&quot;</value>
                <value>0.00214585006226737</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[avg:raised_amount_usd:qk]</field>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]</field>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[pcto:sum:raised_amount_usd:qk:1]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>17028929.050240673</value>
                <value>&quot;debt_financing&quot;</value>
                <value>0.11563615293935876</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[avg:raised_amount_usd:qk]</field>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]</field>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[pcto:sum:raised_amount_usd:qk:1]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>518660.74657534249</value>
                <value>&quot;equity_crowdfunding&quot;</value>
                <value>0.00061878747097882146</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[avg:raised_amount_usd:qk]</field>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]</field>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[pcto:sum:raised_amount_usd:qk:1]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>416599.09999999998</value>
                <value>&quot;non_equity_assistance&quot;</value>
                <value>2.9787335393982292e-05</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[avg:raised_amount_usd:qk]</field>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]</field>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[pcto:sum:raised_amount_usd:qk:1]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4318193.3127710847</value>
                <value>&quot;grant&quot;</value>
                <value>0.0091524100557824686</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[avg:raised_amount_usd:qk]</field>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]</field>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[pcto:sum:raised_amount_usd:qk:1]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>168704571.82236841</value>
                <value>&quot;post_ipo_debt&quot;</value>
                <value>0.026193029250162689</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[avg:raised_amount_usd:qk]</field>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]</field>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[pcto:sum:raised_amount_usd:qk:1]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>82434121.519230768</value>
                <value>&quot;post_ipo_equity&quot;</value>
                <value>0.052542035296743526</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='8' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[avg:raised_amount_usd:qk]</field>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]</field>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[pcto:sum:raised_amount_usd:qk:1]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1251196.4633507854</value>
                <value>&quot;product_crowdfunding&quot;</value>
                <value>0.00048820717644651072</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='9' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[avg:raised_amount_usd:qk]</field>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]</field>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[pcto:sum:raised_amount_usd:qk:1]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>82395824.241379306</value>
                <value>&quot;secondary_market&quot;</value>
                <value>0.0024407229705113854</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='10' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[avg:raised_amount_usd:qk]</field>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]</field>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[pcto:sum:raised_amount_usd:qk:1]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>19415317.980793852</value>
                <value>&quot;undisclosed&quot;</value>
                <value>0.030977104819803813</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='area' id='2' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontcolor='#e15759'>The fraction has been calculated for each investment type with respect to total investment</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.455432'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.218818'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Question_1'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontcolor='#e15759'>Plot of &quot;</run>
            <run bold='true' fontcolor='#e15759'>FractionOfTotalInvestments</run>
            <run fontcolor='#e15759'>&quot; for each &quot;</run>
            <run bold='true' fontcolor='#e15759'>Funding_Round_Type</run>
            <run fontcolor='#e15759'>&quot;.  Color shows details about &quot;</run>
            <run bold='true' fontcolor='#e15759'>Funding_Round_Type</run>
            <run fontcolor='#e15759'>&quot;.  The marks are labeled by </run>
            <run bold='true' fontcolor='#e15759'>Average</run>
            <run fontcolor='#e15759'> of &quot;</run>
            <run bold='true' fontcolor='#e15759'>Total Amount Raised in USD($)</run>
            <run fontcolor='#e15759'>&quot;. As we can the &quot;</run>
            <run bold='true' fontcolor='#e15759'>Venture</run>
            <run fontcolor='#e15759'>&quot; is in the range of &quot;</run>
            <run bold='true' fontcolor='#e15759'>5 to 15 million</run>
            <run fontcolor='#e15759'>&quot; of budget allocated by &quot;</run>
            <run bold='true' fontcolor='#e15759'>Spark Funds</run>
            <run fontcolor='#e15759'>&quot;.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='master_frame' name='federated.0i6w0l61ft8wlr19si1eb1ex1r0n' />
          </datasources>
          <datasource-dependencies datasource='federated.0i6w0l61ft8wlr19si1eb1ex1r0n'>
            <column caption='FractionOfTotalInvestments' datatype='real' name='[Calculation_499055197794951172]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([raised_amount_usd])/TOTAL(SUM([raised_amount_usd]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[raised_amount_usd]' derivation='Avg' name='[avg:raised_amount_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Funding Round Type' datatype='string' name='[funding_round_type]' role='dimension' type='nominal' />
            <column-instance column='[funding_round_type]' derivation='None' name='[none:funding_round_type:nk]' pivot='key' type='nominal' />
            <column caption='Raised Amount Usd' datatype='real' name='[raised_amount_usd]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_499055197794951172]' derivation='User' name='[usr:Calculation_499055197794951172:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;venture&quot;</bucket>
              <bucket>&quot;private_equity&quot;</bucket>
              <bucket>&quot;debt_financing&quot;</bucket>
              <bucket>&quot;post_ipo_equity&quot;</bucket>
              <bucket>&quot;undisclosed&quot;</bucket>
              <bucket>&quot;post_ipo_debt&quot;</bucket>
              <bucket>&quot;seed&quot;</bucket>
              <bucket>&quot;grant&quot;</bucket>
              <bucket>&quot;angel&quot;</bucket>
              <bucket>&quot;secondary_market&quot;</bucket>
              <bucket>&quot;convertible_note&quot;</bucket>
              <bucket>&quot;equity_crowdfunding&quot;</bucket>
              <bucket>&quot;product_crowdfunding&quot;</bucket>
              <bucket>&quot;non_equity_assistance&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[usr:Calculation_499055197794951172:qk]' scope='rows' value='Fraction_Of_Total_Investments_0_AND_1' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[avg:raised_amount_usd:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]' />
              <text column='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[avg:raised_amount_usd:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[usr:Calculation_499055197794951172:qk]</rows>
        <cols>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Question_2'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontcolor='#e15759'>Plot of &quot;</run>
            <run bold='true' fontcolor='#e15759'>Total Amount Raised in USD($)</run>
            <run fontcolor='#e15759'>&quot; and the &quot;Country Code&quot; for which it has been raised. Color shows details about &quot;</run>
            <run bold='true' fontcolor='#e15759'>Country Code&quot;</run>
            <run fontcolor='#e15759'>.  The marks are labeled by &quot;</run>
            <run bold='true' fontcolor='#e15759'>Total Amount Raised in USD($)</run>
            <run fontcolor='#e15759'>&quot;. The data is filtered on &quot;</run>
            <run bold='true' fontcolor='#e15759'>Funding_RoundType</run>
            <run fontcolor='#e15759'>&quot;, which keeps &quot;</run>
            <run bold='true' fontcolor='#e15759'>venture</run>
            <run fontcolor='#e15759'>&quot;. Since &quot;</run>
            <run bold='true' fontcolor='#e15759'>China</run>
            <run fontcolor='#e15759'>&quot; is Non English Speaking country we have to exclude it from our observations. Also we have removed the &quot;</run>
            <run bold='true' fontcolor='#e15759'>NULL</run>
            <run fontcolor='#e15759'>&quot; entry from the observation.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='master_frame' name='federated.0i6w0l61ft8wlr19si1eb1ex1r0n' />
          </datasources>
          <datasource-dependencies datasource='federated.0i6w0l61ft8wlr19si1eb1ex1r0n'>
            <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Funding Round Type' datatype='string' name='[funding_round_type]' role='dimension' type='nominal' />
            <column-instance column='[country_code]' derivation='None' name='[none:country_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[funding_round_type]' derivation='None' name='[none:funding_round_type:nk]' pivot='key' type='nominal' />
            <column caption='Raised Amount Usd' datatype='real' name='[raised_amount_usd]' role='measure' type='quantitative' />
            <column-instance column='[raised_amount_usd]' derivation='Sum' name='[sum:raised_amount_usd:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:country_code:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_code:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country_code:nk]' member='%null%' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;ARE&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;ARG&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;ARM&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;AUS&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;AUT&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;BAH&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;BEL&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;BGD&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;BGR&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;BHR&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;BMU&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;BRA&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;BWA&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;CHE&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;CHL&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;CMR&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;COL&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;CRI&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;CYM&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;CYP&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;CZE&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;DNK&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;ECU&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;EGY&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;ESP&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;EST&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;FIN&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;GGY&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;GHA&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;GIB&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;GRC&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;GTM&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;HKG&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;HRV&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;HUN&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;IDN&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;IRL&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;ISL&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;ITA&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;JOR&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;KAZ&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;KEN&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;KNA&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;KOR&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;KWT&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;LAO&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;LBN&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;LIE&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;LTU&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;LUX&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;LVA&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;MAF&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;MAR&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;MCO&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;MEX&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;MKD&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;MLT&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;MMR&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;MNE&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;MOZ&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;MUS&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;MYS&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;NGA&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;NLD&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;NOR&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;NZL&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;PAK&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;PAN&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;PER&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;PHL&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;POL&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;PRI&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;PRT&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;PSE&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;ROM&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;RUS&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;RWA&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;SAU&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;SEN&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;SGP&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;SVK&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;SVN&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;SWE&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;TAN&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;THA&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;TTO&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;TUN&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;TUR&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;TWN&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;UGA&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;UKR&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;URY&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;VNM&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;ZAF&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:country_code:nk]' direction='DESC' using='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[sum:raised_amount_usd:qk]' />
          <filter class='categorical' column='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]'>
            <groupfilter function='member' level='[none:funding_round_type:nk]' member='&quot;venture&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[sum:raised_amount_usd:qk]' scope='rows' value='Total Amount Raised in USD($)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:country_code:nk]' />
              <text column='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[sum:raised_amount_usd:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[sum:raised_amount_usd:qk]</rows>
        <cols>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:country_code:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Question_3'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontcolor='#e15759'>Plot of Count of &quot;</run>
            <run bold='true' fontcolor='#e15759'>Number of Records</run>
            <run fontcolor='#e15759'>&quot; for each &quot;</run>
            <run bold='true' fontcolor='#e15759'>Main Sectors</run>
            <run fontcolor='#e15759'>&quot; broken down by &quot;</run>
            <run bold='true' fontcolor='#e15759'>Country Code</run>
            <run fontcolor='#e15759'>&quot;.  Color shows details about &quot;</run>
            <run bold='true' fontcolor='#e15759'>Main Sectors</run>
            <run fontcolor='#e15759'>&quot;.  The marks are labeled by &quot;</run>
            <run bold='true' fontcolor='#e15759'>Main </run>
            <run fontcolor='#e15759'>Sectors&quot;. The data is filtered on &quot;</run>
            <run bold='true' fontcolor='#e15759'>Funding Round Type&quot;</run>
            <run fontcolor='#e15759'>, which keeps &quot;</run>
            <run bold='true' fontcolor='#e15759'>venture</run>
            <run fontcolor='#e15759'>&quot;. Also the &quot;</run>
            <run bold='true' fontcolor='#e15759'>Raised_Fund_Amount_USD</run>
            <run fontcolor='#e15759'>&quot; has been kept in between &quot;</run>
            <run bold='true' fontcolor='#e15759'>5M-15M</run>
            <run fontcolor='#e15759'>&quot; as needed by &quot;</run>
            <run bold='true' fontcolor='#e15759'>Spark Funds</run>
            <run fontcolor='#e15759'>&quot;. This has been accomplised by filtering on Data Frame. Hiding &quot;</run>
            <run bold='true' fontcolor='#e15759'>NA</run>
            <run fontcolor='#e15759'>&quot; values.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='master_frame_5M_15M' name='federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Funding Round Type' datatype='string' name='[funding_round_type]' role='dimension' type='nominal' />
            <column caption='Main Sectors' datatype='string' name='[main_sectors]' role='dimension' type='nominal' />
            <column-instance column='[country_code]' derivation='None' name='[none:country_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[funding_round_type]' derivation='None' name='[none:funding_round_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[main_sectors]' derivation='None' name='[none:main_sectors:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)].[none:country_code:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_code:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country_code:nk]' member='%null%' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;ARE&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;ARG&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;ARM&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;AUS&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;AUT&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;BAH&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;BEL&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;BGD&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;BGR&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;BMU&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;BRA&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;CAN&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;CHE&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;CHL&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;CHN&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;CYM&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;CYP&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;CZE&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;DEU&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;DNK&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;EGY&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;ESP&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;EST&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;FIN&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;FRA&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;GHA&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;GIB&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;HKG&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;HUN&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;IDN&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;IRL&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;ISL&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;ISR&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;ITA&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;JOR&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;JPN&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;KAZ&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;KEN&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;KNA&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;KOR&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;KWT&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;LIE&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;LTU&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;LUX&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;LVA&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;MAF&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;MEX&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;MLT&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;MNE&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;MYS&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;NGA&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;NLD&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;NOR&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;NZL&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;PAK&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;PHL&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;POL&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;PRT&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;ROM&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;RUS&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;SGP&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;SVN&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;SWE&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;TAN&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;THA&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;TUR&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;TWN&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;UKR&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;URY&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;VNM&quot;' />
                <groupfilter function='member' level='[none:country_code:nk]' member='&quot;ZAF&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)].[none:country_code:nk]' direction='DESC' using='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)].[cnt:Number of Records:qk]'>
            <groupfilter function='member' level='[none:main_sectors:nk]' member='&quot;NA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </computed-sort>
          <filter class='categorical' column='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)].[none:funding_round_type:nk]'>
            <groupfilter function='member' level='[none:funding_round_type:nk]' member='&quot;venture&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)].[none:main_sectors:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:main_sectors:nk]' />
              <groupfilter function='member' level='[none:main_sectors:nk]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)].[none:main_sectors:nk]' direction='DESC' using='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)].[none:funding_round_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)].[none:main_sectors:nk]' value='22' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)].[none:main_sectors:nk]' value='53' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)].[none:main_sectors:nk]' />
              <text column='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)].[none:main_sectors:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)].[none:country_code:nk] * [federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)].[cnt:Number of Records:qk])</rows>
        <cols>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)].[none:main_sectors:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='0.875' source-height='51'>
    <window class='worksheet' name='Plot_1.1_Piechart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[usr:Calculation_499055197794951172:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Question_1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[attr:funding_round_type:nk]</field>
            <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_permalink:nk]</field>
            <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Question_2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:country_code:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Question_3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='3' param='[federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)].[none:main_sectors:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)].[none:main_sectors:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;NA&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)].[none:country_code:nk]</field>
            <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)].[none:funding_round_type:nk]</field>
            <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n (copy)].[none:main_sectors:nk]</field>
            <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[diff:ctd:main_sectors:qk]</field>
            <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:Calculation_499055197818970119:qk]</field>
            <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:country_code:nk]</field>
            <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:funding_round_type:nk]</field>
            <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[none:main_sectors:nk]</field>
            <field>[federated.0i6w0l61ft8wlr19si1eb1ex1r0n].[usr:Calculation_499055197808287750:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Plot_1.1_Piechart' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Question_1' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Question_2' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3hUVfrA8e+902fSG6SQkBBC71V6EVABFUSxYnfta1l1xYa769p2Xcta
      1/pTsWEBEaUIKL1DqNJrKOlt+tz7+yO0AGqCM6nv53n8I/fOnHPu+HDee7qi67qOEEKIRket
      7QIIIYSoHRIAhBCikZIAIIQQjZQEACGEaKQkAAghRCMlAUAIIRopCQBCCNFISQAQQohGSgKA
      EEI0UhIAhBCikZIAIIQQjZQEACGEaKQkAAghRCMlAUAIIRopY20XQAgh6oKC/Vv49qsvmLds
      E16DnW4DLuTmay8iwhSa/DRPOW88fT+2fvdy3bmtUIKRqK6Rt3cTU6dMYd6qLWiGMHqMvJw7
      xg3BbDz9fV8CgBCi0Ss7uIF/PvI3Spt244a7HyDC4GHL+m2U+AhZANB1jdwDu3GUuIOWZuHe
      tfz90Um4U4dw5/0PY8XJovX78Ae0MwYARQ6EEUI0bhpTX7qXD9dH8vzzE0mPtgJQUTUqgMbh
      7auZ/MkUth8up1nbXowfdyHpTSIoP7yNV/73ISOuuZ+uaZEEvC7eee4vJI58jNFdmrJwysss
      OpxE75Y6s+cswmmMY9y1N9E92cSbzz3MdwvWY4jNJDU+jKbtB/LALZfz0/9NYnvc+Yxvb+T9
      D74kpc8o3OtnYOh0KdcO7wSA91A2k16czjX3302b+LCKxwiU8+mzD/HZ/iTeev5B4h3Gk54D
      FN3P1lU/MeWbmeQU+8jqMUTGAIQQjVwgl8U/b6LzuaNIO1r5AyiKgqLouA6u46H7H6Uwsh2X
      jL0QZdePPPrP18gp9uB3l7JhwzoKy70A6JqfbRuWs7+w4q3+yN5fmP3dFyz8pZQBw88nrnwT
      L782BbfFQf/hY0iPt9Gy+1DGjx/P+QO6YVIhZ0c269au4P33PiMsqxfd22eQaPfyyRff4dQq
      yrZx6Y9sKwkQZz9RXm/xERZv2MPAESOOV/4nnkNh39ofmPTU65jSe3Dx6MEcXPyZdAEJIRo5
      ZxGHy320TIg7/Y1YD7BixlfkJQ/hzbuuxqoq9O+UyK3XP8z8jeMZmfz7yad3Gck9d07AoUCi
      czOLPzqC22SlQ/d+NI18CUdWFwYO6lRpDGDX+rWMe2giw3tkoAIJIy/k7S//zsLtdzI8y86C
      +T/Rud/DxNhPVOEel5MSt5v42KgzlEJj7tRPie49njuvvxSbQaFTepS0AIQQjZzFRrjRQGm5
      k9P6wzUfu/cdIj0zC4tSUUWb41JpGa+zZ39+lZJXUDhWuytK1YZ6s3qP5NzuGccr6IikTgzo
      Es3M2QvRCjfy02Yzwwa2w3BSckaTGavRhNN5pjGFcvbtziO1ZUtsR78UEdtcAoAQopEzJ9G1
      SyJrFy2g2HsiBOi6jq6ohNttlJQWox8ND7q3lPxSjcgI+x/KVlHAYDBWpHtK5DFarRhPqtxV
      cxijLxjCku9msODn+RjbnUPb+Mr526LjaJcay6LFK/GdPLSr6+i6BUe4iZKSErSj97yeMgkA
      QojGzsjIK6/DlT2d1z/6jkKnD5+7lOyl8zhYbqbfiEHsnvcVs7L3Ewi4+emLj9ngT6RvhxSM
      BiNGv48Dh/Lxe51kL57F7oKq5aoajMTHxLB6yRKcAQ2v14P2q1NyFJr1uZDuxjU8/foM+g09
      H7v5lOrbFM3Yqy6nZNnHvDh5LuXeAH53KYvmL6LEp9J/6FDWz5jM0m25+FxFzP7iAwkAQggR
      33ooz/7jHopWfMrFwwYwYNhoXvp8AT5dIb7jhTxzzwjemXgdffsN4T8zdnLXw4/QMSkcR5N0
      Rg/ozLuPXc/wi69h2sojOKy/nx8ABitjrr4O685vGNK3D7c8+Q5O369/3GiJ44IR55DnacL5
      /TPOWHkndT6P5yb9mYPz3mbEoL4MOHc0//thDX4duo2+keuHpvLsneMZMGQ0n28yyDRQIYQA
      QNfxeT24vV50VMxmCxazCUUBXQ/gdrrwBXSMZjM2i/l4f37A78Xl8oBqwGq14nWXYTA7sJgM
      eN1OfLoBu82CAgR8blweHXuYDZWKbiav24nHF8BosmCzWvC6ywgoFuzWUxYg6AEW/t+T/G9n
      Bv97/FrMhjOPJ+i6jt/rxu31AQomiw2LyYCiKGgBP26XG7+mY7JYJQAIIURdV5LzC3MXLeXz
      D6Zw9XPvcX6bOKo4nvybpAtICCHquPIjO1m8ejtj732KYUGq/EFWAgshRKMlLQAhhGikJACc
      Jb/fX9tFEEKIP0QCwFnSNK22iyCEEH+IBAAhhGikJAAIIUQjJQFACCEaKQkAQgjRSEkAEEKI
      RkoCgBBCNFISAIQQopGSACCEEI2UBAAhhGikJAAIIUQjJQFACCEaKQkAQgjRSEkAEEKIRkoC
      gBBCNFISAIQQopGSAFBf6H62LJ/Dhx99zuYDRafeZPvypRz2ySE1QoiqkwBQTyz89AX++fY0
      dmxexkM3XcNnS3dXup89exb7vBIAhBBVZ6ztAoiqKGTJuhIeefp5smKM7Fo5lb889SRt3vwv
      HZs4artwQoh6SloA9UIZiiGRuCgLimIgvdto7h3Xgn8+/T/KA7VdNiFEfSUBoF6Ix2E7xOE8
      NwCKauKccbfSixU88cqXlPlquXhCiHpJAkC9YKVvj+Z8/c0snL6Kw+iN1jj+9MiT2DZ+yrU3
      3Ml3K3ag13IphRD1i6LrutQbZ8Hr9WI2m2ssP91Xwpp1O8js0IkIy4m4HfAUs+znn1i/pYiR
      f7qSFLMM6wghqkYCwFmq6QBwZjoepwuj3Y6hlksihKh/6k0XkK7reD1uysvLcbrcBDT9RJeH
      ruM7es/t8VI5punomh+X00m504U/oB3/nq5puF1OysvLj/7nxO3xUX9iopfv33iP3bVdDCFE
      vVQv+gt0PcDu7CUs/eUQMZERBHxuopp1pHen5ijoHNm5hh+XbSUyJgpXUREpXQbQMysJRQFd
      czN/6lfkq9HYVTdlRDNiWH8irUb8pYf44O3JNOnQETugaX6K8/NJ63YuPVs1RVWU2n70o4qY
      8voH/FJQdsp1P2tnLyDZVUQ8cVz3wI0kSxeQEKKK6kVtUbhrDfO2lHHluHFYT+nr0MoPM+PH
      dQy59ApSo634yo/w5SfTaZo4gbRwlZ2LpnEgsitXDm6NqihsWzyV2Ys3M2ZIBwAsjqYMGD6c
      mGMJBgp5/bUvaZt+PRGWutKxUsIPU74nbezltEuMOOm6lyOrt5DRpg0phGNT60rAEkLUB3W/
      C0h3s3bVetr36H1a5Q9weNcmTMntSY6yAmCyx9E+PYwN2w6gB/wszz7IgD6tj7/Nt2jXiZI9
      myly/0o3j2pG8Xvw61qonugsNOOZt/6Of8cKNh5w02fYKMaOHcvYsRfRrVUbho0dy9ixw4gx
      1pWAJYSoD+p+C8BdxuFSnRSrl3Url1Ls9BIW14yOrZtjVBUK8g4RFdcSw7GXX0UlIT6aFQfy
      0bQocn1WmlpPvBmrEVHY/OWUO31EnFRf6rqGszifVQvmkNB1ABEndaW43W407fSA4PF4QvXU
      p7EktObeR59g3c9Tefi2m+lx0XVcPqIDHq8XZ2kppTVWEiFEQ1HnA4Df66W4MJdNW3bQpXUG
      KWaFXRuW8NHmvVxxcX/8Ph/GSFOl7xisZjSPF1334cNMpbk6igmjUScQ8IMB3GX7mfn111gB
      r9uFOTyO7u0zMJzU/2+xWE4bGPb7/Vit1tA9+Bk56H/hDXTqPZjP3nuLu2d+QXixQl+HA9kQ
      QghRXXU+ABhMZiKi4ujWqzfNHBWVcuzAkex+4zX2lPbGZnfgcTkrfcdb5sLkiEZRrdgVN07A
      fuxmwI3Xr2IyVQQNa1gKI8aMIVrX0QN+ivL3MfXLrxh1zeXE2yo+oygKyhkGhFW1dnrQoppm
      cvMDf2do9gLeeGMe4apaD/ryhBB1TZ2vNxRrGE0jVPYfLDzpohGbGbwBnfimKRQc2ovnWA+N
      7mffwTyaJTVBVS2khPnZXXBirwRPfi4eawwRjsqxT1EUVKOJmCYZNDEUcrCsru2sqVN4aA+b
      f9lBmceParSQ0qIdoy8byM5lG/HVl5mrQog6o863AFCtdOzekelLF5GZcC5x4RZKjmzjkJrM
      gAgTYeFtiF46lY07D9EpI4HinG1szbdw3tB4FFWhV59OfDv3Z5qNHohd8bJqxRpS251DmEnh
      1H3UdF2jrGA/B1w2ujnq1k+za9k0/vHfT3AHFKJa9GXinRfz4bOPsV9NwVCyi0VbbuKhCQMr
      dV0JIcRvqRcrgXXNT87ODazZsAufrqCa7XTr3Y/kGDuKAs7CAyxduppitx+DyUH7nr3JSKiY
      LqnrGjvWLGTD3nx0HWJSWtOrSyusRhVf6RG+/OIr1OgmmAAUBVU107JzT1o3i/3NdQA1uxLY
      w2tPPEy7KyfSv4WDHz/5L7M2HiGyxTAm3jwcxV/MX+97igef/yexlroVuIQQdVe9qC0U1Uhy
      ZmeSMzuf8b49Opkh5yef+buKSmbXAWR2Pf2eKTyBy2+4NZhFDZEjOP0ZtMuMQzXAgBEX8vEX
      d3HBn56q6MMzRNA1wcF+f0ACgBCiyur8GIAAsKCqHvz+isaaJTaOLlnnkJJS0QLRAbffj1F6
      f4QQ1SABoF6IJzosl13HzgI2OBgyZjQJx2a/6n5+KXORapC3fyFE1UkAqBcUzrv4YrTyY9Nd
      rXTo253Io3+59vyELXM4drOsBBZCVF29GASui+rGdtAVdL1iZ1RFUZBeICFEVUkLoEEo5Puv
      51Dmq0v7Fwkh6joJAA1COfM+/A+jxlzDNws24tOkUSeE+H3SBXSW6lIXELqOz13Gvt1b+WnO
      Gs656nJax4TVdqmEEHWcBICzVKcCgBBCnAWZN1hv6OTu3cK8ObOYv3AFh4tchMUm0nvQeYwY
      2p+MppG/n4QQQpxExgDqiT0rZ/DIpOc5oCUw9upr6d08hi6Dz8NWuJbH/3wP3284hLTlhBDV
      IS2AesHJt1//yDUT/03/zGgA0i2HWVjWkmuvGMklY7K59+lX6f+fJwkzSUwXQlSN1Bb1Qh4u
      vQVtM6KPX7HHx1N88CAoCuFJHRkYB7t8vt9IQwghKpMAUC8kEGbNYW9OKboOuh5gz9ps1NhY
      oGIvIL+qYpZlYEKIapAuoHrByvkjOvLX++6mU8/OULyLZbvg5dfbH71fzLZyE1eY5H+nEKLq
      ZBroWaqNaaBFB7fy7TczcEe2ZMzFw4mzm37/S0II8SukC6i+0P0c3rcPJSKZ/oP6nlL562xf
      vozDvrp2jKUQoi6TAFBPLPr0Pzz19jds27iEB2+awGfLdle6nz17Jvu8EgCEEFUnncb1QhGL
      1xXxyD//RVaskV0rvuEv//wbbd98hQ5NHLVdOCFEPSUtgHqhFMWQRFy0BUUxkN79Qu4Zl8E/
      n36b8lNPthdCiCqSAFAvxOOwHuJwnhsARTXRZ9yt9NCXMem/X1Em0/+FEGdBAkC9YKVvz+Z8
      M3U2Ll/FpC2jNY5bH/0blvWTue7Gu/hu5Q5kOpcQojpkGuhZqulpoLqvhNVrt9OyY2ciLCfi
      dsBTzNL581i/pZhRt11FilmGdYQQVSMB4CzVxjoAXddwl5dSXFqOP6ChqgYs9jCiIsMwKLIK
      WAhRPfK6WE8EvKXMnPwGH341lwOlHowKGFQNH5F0HzKah++9lhirCYkDQoiqCloLQNd1NK3i
      TFqDwRCMJOu0mm0B6Ex//RF+LsnkntuuIinCcvyO5itn/pQ3eGeFgXefuxuLUYZ1hBBVE7Ta
      Iicnh9tvv50HH3wwWEmK4w6zZX8s991zfaXKH0A1ORh8+X0MDctlh1emAwkhqk5eF+sFE35/
      GR7Pr6301Skqd8puoEKIapEAUC/EMKirlUmPP828FZsoc1e86Qd8bvZtXc1b/7ibHU37k2aV
      zeGEEFUng8D1gkLPS/6MJX4qH3/4X94vLMbt9WMwmAiPjqHTwLE8e9FAjKq0AIQQVRfSAPDk
      k0+i6zr3338/4eHhocyqwVONVroMGU/nQZdQXu7E5w+gqAbsjjDMMvArhDgLIQ0ABw8eRNd1
      AgHZsCZYFNVIWHhEbRdDCNEAyKtjA6Dru3nwxvv5ef0ufJqs6xNCVE2NBoDPP/+c1157jb17
      99Zkto1ANOd0ieWFx+7j6Ve/IN8l00GFEL+vRgPA1q1bWbduHSUlJTWZbQOmo2saKJGMuXMi
      X33xMRd1a4ZHutyEEFUgs4DqCc3vYfPy2Uyfv4UeF4xlQIc09q6cwX8/moUpsQMP3HsDsTY7
      nfqcU9tFFULUE4ZJkyZNCkZCqqoSERFB27Ztad68OQBWq5W2bduSmZmJ0WjEbDaTmZlJy5Yt
      sdvtwci21gQCgRrc8kJnzdSXePrzbLJaNGHFd1PYXebk2+lLGHXllcSWLOeNGTlcMLAjBpkK
      KoSoItkN9CzV7F5AZbzw6NNceO8TZMaa8eRv5/47/sIlT3/C4HQbuq7z3IP3c+XfnqWZTRaD
      CSGqRmYB1Qt5+APNiImpCDiW6BjapvUkLc0GgAK0iIjgsCZ9/0KIqpMAUC80Jcy8iz0HywEo
      3rOVZVuXsGljIQA6PjYWlJDSCHZhFUIEjwwC1wtWhp/fncfvupEWHVqwe2ce4+66l59ff5RD
      ffpSvmk+BekXEyengQkhqkHGAM5SjZ8Ipvk5uHcnB/JKiElsTvOkGHJ3rePzKTOwpHbj8jHD
      Kx0VKYQQvyfkr4wBv4fSknI01UCYIwyTyVDtTYtdRfv55puZWCNjjl+LSGrJwB7tMapQnr+f
      ZctXU+QOYLaE075HL5rHV+w9pOt+tq9ZzIbd+aAoxKW1oWfHlliMKv6yXL6e8g1ExlX8EIqC
      yRxGhx69SY0Lq1una6lGEptnkdi84k9feQE7dx8isUU7mjRPx26Wyl8IUT3BDwC6jtdZyMbs
      NcydNYst+3LxuL1oiorZbCWpRXuGDh1E5/atiXZU7Q3aVZyDFt2OMRf1Pj07XwlzZswmqdcI
      BmY2pWjfJmb8MJPwy8YSa1bI/2URc7d6uOLi0ThUD4tnTmWRamNw51T0gI9yt40LrxtDDKBr
      fgoPbubzaTOZMGEMdlNdqVQ1vv/4bVIHX0G7pHA0bwmTX3yS+UciGNG7JdPee4aVO27l7kt7
      ytnAQogqC2oA0AI+9qxfwFvvTGZXgZ8u/YZw+cAMwu0WFDRc5SX8sm45//fKs3yW0IIrrruR
      vu3T+L3NLJ15hVhjm5/xXtHeTRTYmjMiMwmDCrGprcmKXsP6HXkMbBXNkkVr6Xvx7URYjYCR
      Hj27MHn2WkrbN8N2SlqKaiQmqRXGsnk4/YE6FAAK2fJLIZ3GhgFQsHcdG72tePWF27EbYPyl
      FzPpwafJvbAbTa0yDiCEqJog1hYBNs79hJc+X87QS27ir4O6E2E1ntbdM2DwMCaU5bNs/gw+
      ++/THLr6XsYPaPUb6erk5uZhCk8hNzcXRTFgDw/HZjaiKApHDu4jJrEb1mN1tWIkNSme2QcO
      obW0s6/UyNDYE3PjrXEJWFzLKCnzYzupcLquE/B5OLRtOYH41oSbTvw0Xq+XU4dKNE3D5XKd
      3U9VbYU4XQYCfjcuF+QX5JKS0QrF66KiBCZahhvYXV5GpG75nbSEEKJCEAOAjiW2FY8/eymp
      Mae+W1dmCYtlwKir6darP9kHfu2YwxPpJmZ1pjynkF9+KcTnLiXnUBGdB11A2+QI3C4n1rjK
      q4rNYTZ8e53omhsXNirdNVgxGzV8Ph+YwV22n5lff40VHWdpKcaIJMZeNBiz4UR0UNXTWwK6
      rp/xemgk0zRsH8s27GdUtzSiIhPxenOOr0T2uQpYebiUYRZLDa5OFkLUd0EMAEayuvZC1zU8
      bjdGs6ViWwJdpzhnC9NmzMNtS+L8C4aTHGNHQcER35xz4n8vXZWmGe1omnHsbx1v4TZemfwd
      GbdcjtFkwu+rvPtlwO1DtYSDYsKEDx9wvA2g+wj4leMVpTUshRFjxhCt6/jdZWzJXsqM6fO4
      dOy5x7uAjMbTfyZN02p0FtCY667miUefYG3HgVx8bhfce7ayIzeXI6vm8NGHU+h68/PEO2zI
      ThBCiKoK+its2b4lXDv+VjYVVlTKrsPruefWW5m6aCNr537C/Y/8i5zS33vr/y0K5ugWRHkP
      URoIEBufSHH+YU6sgdXJzSsgPj4Gg2ojweThkOfEt7XSYpxGOw575cpbURRMtnA69BpGfOkW
      dhR7qEti0nrwn7de5ZykAJ+9+zbrflnNkw8+xqzsXG765zvcNry1VP5CiGoJ6hjAtuVz+XLK
      Jxwymlg57WNWAnvWzeOApTV3XnUp0UoR7//vIz6eMo2+WYkkNG9Fy+SY30nWy/YNayg0xNOx
      TXMM3lJWLV9IdNu+RJsMGJq3J3bXQpati6F7u1SObF/DttIwenVPAYNKn4HdWD5zNuZBA4hW
      S1i8OJvMTt2Isihop9TxuubnwLZs8oxxdLbVvcFUoy2akVfexgVXVr6uyMwfIcRZCOJCMB13
      WRHzPnyOKbmteOa2kejl27nz2gfocvMkLuqaBHo5n//7RUwDLmdMz0wiE1JIjvuds4J1HZ+n
      nJ2bs9m6LxdNMdGifTfapCUc3/lS87vZlr2KX/blEdkkg25d2xJmNhz9uo4zfx+LV6zDpVlo
      17Un6U0jURWFgKuYBT/NpfDoWK6iGIhqkkrXru0JNxt+s2Kt8YVguo9Vc6bw3gdfsHrXIQI+
      PyazEWtUBqOvuJo/XXHeiYFwIYSogqCvBM7bNJMbHniPy265htJ1P/D1epU3/vcsGVFWXIc2
      cM+DzzPuoecY1q5JMLOtcTUdAH7+5Hk+Xe3l+huvJj0hHKOqVoy3lOXz/SdvsdLXkRf/ejUm
      g7QGhBBVE/R+jphWg3jkthw+njEVvymahx67i+aRFVMTt2Uvx5LUkQ7pvzvyKyrJZ+UGDw88
      9hDpEads9xwdw3V/eYriiY+zx+sj01aDrRIhRL0W1GmgHo8Ps8VCz5HX0XnoZegGCxaT8fiW
      Ci16XcQTvazE2Cv6KnRdw+vzY6nJrpR6yYcvYML8ayvmFCNWNHyyrZMQohqC2GvsZ9V3H/DR
      d4sp9QSw2BxYzcZK++k4ImOJjXSgAF5nIYumfchHM9cGrwgNVgId00t49Y1P2LL7IG5fxZwn
      LeCj4PBe5n7+CisMLUg3y2EwQoiqC+ogcP7ubF7/72vs88dx4dhL6NyqOfGxkZgMBhRFx+/z
      UpR/mO0bVzFt2kyKLOncde+ttEmMDE4RalBNjwH4nQV8+/EbfDl/MzaHvWLKp67h9biJyerL
      fXfeQFKkudob7QkhGq+gDwL7nAUsmvUtk6dMp4QwEuKjsR7dVsHvcZGfdwSfOZ4LLrmMkUP7
      EF0Hp1tWRY3PAjpK83vIO5JLuceHwWgmNqEJDkv9/A2FELUrZOcBaD4XWzesZcfeQ5S7veiA
      xRZGcnor2rdOx2aq31sW1FYAOBNd91GQV0ZkbBRGWQ0mhKii0B4Io+toug6KgkLDWrBUtwLA
      ZoZnXUnXOx7kLzdeTFyYtUH91kKI0AhJANB1nbLD2/lm2kwOFpWjKwZik1ty3nnnkhxtbxCV
      U10KAOg6JQe38sXnn7Jkg5t7nplI+99bYCeEaPSCHgB0zc/a79/h/n+8Q0RGV3p0ysQUcLFp
      9RJ2ldi464lnuaRPZr0frKxTAUAIIc5C0EcPnYeyefblKYx77E1uGtYBo9GAouv4fS7mfvwC
      b77+Kp1bPUNmrOxbXy26l5Uzv+CdDz5n9e7DaD4/JpMBS1Q6o6+YwG1XX4BNtoIQQlRDkAOA
      zo7lc3G3GcXN53XGdGxAUlEwWRycO/46fl70BKu2HSAzNuO3kxKV/DT5P3y+TuPmv71Kenz4
      0a22NTzlhXw/+Q3ueyqXlydOkK0ghBBVFuQAECDvcCEZmX1OVP4nMThiaR5nJK+gNLjZNnh5
      rNzk54FHH6T5qVtBREZxzX3/oGjiY7IVhBCiWoLeAtB1neJDu1i+fPkZ7nvIKSwnNriZNgIB
      /AEDpl/dCsKAiYBsBSGEqJYgBwAFs8PBwTU/8I/sWWf8RMBvZJwsXKqmeDpnlPPKqx8x4ZJz
      yWjWFKvJgBbwUXjkAKvmfsUqY0uut8jbvxCi6oI8C0invDCXI0Xlv5UlkfFNiQmzBi/bWlDj
      W0G4CpnxyVtMmbsRs82Kgo6Cjs/nJb71AO65/VoSI0z1fnaVEKLmBH8aqK6jaQEUxYB67MAW
      n5sjuXloqpX4+BhMhvo/XaU2t4LIz83H6fVhMJiIjk+QrSCEEGcl6DWxp3gnL/3jOXaWVMQV
      PeBi+rvPcstNN3LzrbfzxpcL8QSkr7radJ3y4gIO5xZhj44nLS2NlJSko5W/jrO4GI8mv6sQ
      ouqCHAB0DqyczewcI82iKpI+kj2LN77JZuytD/HADRew8Kv3WL2nKLjZNgL7s2dzx/VXcunY
      i7nxvn+wNddV6f4P/32J9a66dZC9EKJuC3IACLBv936y2ramYpmXzoI5P5DU7QLGXTCYQaPG
      0DfByIadOcHNtsHz8PWn07j+2cksWDiPazt5eeDh/1AiLSkhxB8Q5ACgYrWaKCs/Ogjs2sfM
      eRvpNXQIYUYFVBWDouMPaMHNtsE7iFNvS/sWMSgGK+fd8Aij4jbyt3fm13bBhBD1WNADQNt+
      wyj8eTIvfzCZf//tKfaE9+C87kkA+PJyWF/opXliTHCzbfCisVoLcDorAqdiCuOqByZRNO05
      vly9v5bLJoSor4I+CBye2pO//3UC+9ct40AggUcnPUhyWMVsme0bV+JI7kinFonBzraBi6BN
      moG5SzdxrNPHHpPJ3566i3fuvoqn353GnrxSpENICFEdIdsO2u/1oqsGTEbD8e2fve5yvAED
      doc1+JGnhtX0NFBv0U4++nIZoy6/jARHxWE6uq6RvzebN199hw07NB77+D+0td5WHtsAACAA
      SURBVMpiMCFE1QR9IVhp3kFy8k/f60c1mohvmkKko2GcW1s3toPWyD9wCHtSU1S3F4PVgrEB
      nLUghKgZQd8Mbt0PH/D0JwtPu6MoKvboZC694Q4uHtQBk9RTQeBlznuT6fLoX8iy1e+V1UKI
      mhf0FkDxob3sOVJ8hlsBtiz+lsnzc3ji38/RJSUieNnWgpptARzhhXv/xsZS9ymtpwDbV2YT
      370LkSQy8dXHybCYfiUNIYSoLOibwUU2TaNj0zPfbd8mhR3rHmTNtgP1PgDUrAC5h/NI6XUe
      w3q3x2E2HL3uYfp/P6DdHbeQjoUmRsNvpiKEECer0bFYxWDCZlbwev01mW0DkMijLz9Dur6P
      qdN/xGtLoH2nznTp0om0Jom06dKFLl3a4mgAeywJIWpO0M8D8Hu9eHynV/C6FmDf2tksOuDl
      ttQmwc22EXDENee6ex5l/8af+e9LjzK9zQjuuHa4TP0UQpy1oA8Cr/zmdV78aulpd7zOYo4U
      eBh0+Z30bJkQ3GwbDYWUdgN56qVuzPvyHe647gYCJVH0rO1iCSHqpSAPAmvsW7+UxZv2nXbH
      YHbQtktPWqUl0BCOra0L00DdRfv55INZjPzzDUhIFUJUV0gWgjUGdSEAVBzBCShKg1hbIYSo
      WXKSSL2mIOu+hBBnS6aNCCFEIxXSFoAW8FFUWIiv0r71CvaIKMJttd19Elp7Dxfz9EcLarsY
      ZyUuys7fbxxS28UQQoRYyAKAt2gHf5/4JBsOFFH53BIr4+59kgmD24Qq6zrB5w+Qk19W28U4
      KwE5WlKIRiFEAUBnx4JvWVoYw2MT/0y4+eSeJpUmac1Ck60QQogqC1kLwBEeRmpWZ3p374q5
      Icz7FEKIBiZkg8DJXQdj3LeW/YWlOJ3OSv95/YFQZSuEEKKKQtYC2Ll6GYf2r+Wv991PtO3k
      OGPhvOvvZkzvzFBlLYQQogpCFgCikrO48sbbzphli6ZRZ5eorhPw+/AFwGIxHT9pDF3H7/fh
      D2ioqhGT6cQpZKCjaxperw8dBZPZhKqqKFScqOXzejl5zFM1GCudYiaEEA1ViAKAQnzL7oxv
      2T2oqWoBDz98+QnLtxVx78Q/E2VQAJ3c3WuZs3gLYVERuEtKSes+iB6ZTVEU0DUPP0/7ksN6
      JHbVjdMQz3nn9iPCasBfcoh33/6YhLbtsQG6HqA4v5AWPYfTPSsBVYKAEKIBC3IA0Ni3YTl7
      9aa0jw2wfufBM3zGQEpWO5onVPc8AI2cjQvQm/Uj+eD0E1edh/lu1loGX3YFadFWfOVH+PKT
      6TRtOoHUMJVdi6exN7wLVw1pg6oobF08lVlLNjN2cHsArI5EBp1/PjHHEgwU8vprX9K6+fVE
      WGR/fSFEwxX0ALBz+Wxma72ISd3P6+/POcN2xVYuvO2hagcAT/FBfl5fzqjxzfl0+YnrR3Zt
      wpTSjuSoiiMRTfY42qc72LD1AM06JbJ8XQ4Dbrj0+Nt8i3YdWfjVCoo87Qg/U0aqGcXvwa9r
      gAQAIUTDFeQAYOCcK++ju27CatR5q+/4M37KZKne+bV6wMOaRYtI7z2EsFPmLRXkHiYyLhPj
      sd4aRSUhPoYVBwrQtCiO+Kwk2k505RgiorH5yyl3+gg/KS1d13CV5LNm4Y/Ed+lHhPnET+N2
      u9E07bRyeb3eXy2z0+Wq1jPWJbquU1ZWPxexCSGqLuhHQpqtDo5t8uAwWYKSat7udWx1xXFF
      RizolQ+b8fm8mCIrbythsJrRPB503YcPM5XuKiaMRh2/3w9mcJftZ+bXX2MFvG4XprA4enRo
      ieGk/v8z7frp9/sxGn/957NaPWfzqHWCoijY7fbaLoYQIsTq/G6gflc+i5dspsewcZhUBe2U
      JQRWux3PKW/b3jIXJkcUimrFpnhwAsers4Abn1/FZKo4PN0alsKIMWOI1vWKvYty9zDtq68Z
      ffV44mwVP4+qnnm5xK9dB+r9APJvPZsQomGo8wGgNO8AuWVe/ItnsQVA1ziQm8sPU6fSpusA
      UpuksDR7Lx4tHYsK6H72H8ojJbUzqmohxeFjT6GfNtEVj+rJz8NtjSbCYQTniXwURcFgNBOb
      2JIm6vfklPmOBwAhhGiIglrD6bpOIODnt4+YUVANKoYqvmFGN+vITbd2PP63FvCRu2cv5110
      EVEGFd3bhsil09i0+wgdm8dRcnA7W/PMDB+SgKIq9O7TgelzF9Bs1ABsqpfVq9bQrG0vwkwK
      p65H1nWNssIDHHDZ6OqQyl8I0bAFtZZzF+/ltWf/zZ7y3/qUhWHX3MboHhlnmYtCVEzM8WMl
      FXMUwy4YwtIlS5m2LoBqtNF7xHnEWysCTHybgfRz/szsGdNA14lK6UD/jmmoQEA1YjGWMufr
      rzEdTVtRjZwz+mIS5O1fCNHABbWWM1oj6T1kBK294D+ygdd+2MNtV12A6Wht7crbwfSfdtE0
      IfKs81ANRi679tpK1xwxKQwdmXLGzyuKSlb3QWSdYU2aKTyBK24602plIYRo+IIaAEzWKPoO
      GwnobPp2K6nt+nDBqFEc3w3al8/u9X8nv+TXp08KIYSoGSGb6mEwGMjJ2YvbFzg+JqADurOQ
      nftzQ5WtEEKIKgrZXkBZfUcS+8q1PPg3M6MHdsNh8LB+8Wx+3Bfg8VZyIIwQQtS2kI10KpEZ
      vPjai7zz/me8/9q/KPUYyWjXmT8/fhu9089yN1AhhBBBE8KpLgox6d25/7FOuFxOPD4dR3gY
      ZqORer5GSgghGoSQznXct3EBH7z/MSu37Cep8yjuv7Ijb30wh1v/+jDpUaZQZi2EEOJ3hGwQ
      2HNoFQ9NfAFji8Fcf0l/vGWlRKZk4CjOYd32nFBlK4QQoopCFAB0ti//CaXNefz5pstol56I
      QQHFEk7TMI2cvOLQZCuEEKLKQtYCcIQ5cBbn4fSe2HDBV3yEnbkeYiIcocpWCCFEFYVsGmhq
      z/No/tadPDhxEun2QnIPuHnp6WfZZ0vjljZnXrUrhBCi5oSsBaCGpfHkf15gSJto9h0sIcyu
      EJnRl0cfuZeM6OCcEyCEEOLshXAWkI4tNo3Lb76Pq/4EHlc5Lk8Aq92BDshMUCGEqF0hawFo
      hVuYNOkVDrr8uHO3Menu6xg56iIeev498l2nH68ohBCiZoVsFtCe1T+x2W0gzmJk1Zwp7DV1
      5d33/k1gw3x+Wr83NNkKIYSospAFgKKCIuJjElDVAGtXrqDtwGFkZbahS5qDgzINVAghal2I
      AoBCSvM0dq6Zz/dTP+bHbOjeMQ28xezJ10mMiwhNtkIIIaosZAEgrsuFTDgnki+++JEuY6+i
      d3osR3ZuxR2bTOfM5NBkK4QQospCtxuo0cGV9/yD0aUu7OERmI0q9vTuTHy4GxER5lBlK4QQ
      ooqCHAB0CnN2U0gkiY4AB/NK0IH8gvyTPqMSUI3EhluDm7UQQohqCXIACJD9w0fM1npxVep+
      /vH+HPTTPmPlwtse4vL+rYKbtRBCiGoJcgBQ6TDiKpKJJNnRmSczBpzhMwpRCUnBzVYIIUS1
      BT0AxCRnEHP0r8yohOAmL4QQImhCuBWERt6uDUyf/TNFTv9J1010HzGGfm2kFSCEELUpRAFA
      x3dkHbfefDeOVt0p2bKG2E59iPbmsKckkg5DAr+fhBBCiJAK2V5A25bOQ+8wjjdemkTnxFhG
      XXcX/3jiIVomRtEsKT5U2QohhKiikAUAv99PVFQ0BsWCxerD5QpgiUslTctl4fpdocpWCCFE
      FYVsDKBZRgv2fLUal99E6/ZpTP3yc5KcmazalUdfNWRxRwghRBWFbCuIqPYDue6cdArdGkPH
      3UJzbStv/u9zYrqfy7ldMkKTrRBCiCoL4VYQcVx9x00Vf0S2569//xdOtx+bzUJAP315mBBC
      iJoVkhaA5i1nc/YqFi9Zys6DhWg6WGxhRIVbWPHdZKYv2x6KbIUQQlRD0FsAfncB7z/3BF8u
      3gqKgsmWwLX3P8pFvVJZ/M3bvPh/S7nhyWHBzlYIIUQ1BT0AHF43k8+XlfDgUy+QHmVm64Kv
      ePPNN/BsasqX32dz6Z8fZESn1GBnK4QQopqCvhncjk2bSB8wknO7tQMgo9lVzPjmOv739SHu
      mvgYF/Zpg1EmAQkhRK0LcgDQ8Hk0wsPDj19RzBHEhdkZf81ELurbBoMS3ByFEEKcnRDMAtLY
      tWoOr712bLGXly255RQu+Z43d/wMmOg6dBS9WyUGP2shhBBVFuQAoBDRpBkR2gpWrCg4ftWa
      lErxnk2s2ANgIb7zIHoHN2MhhBDVFOQAYKTHmNt5b0xwUxVCCBF8MhwrhBCNlAQAIYRopEIU
      AHTK83PYlZOPdvKuD7qfooICXF7/r35TCCFEzQhZANix4HNe+WQ+gUrb/nj49tV/8e2q3aHJ
      VgghRJWFbDO4gM9FudvHifpfx12az46de0gsdVcnJXL37mTz1p0UlLsABVtEHF26dSM+wooC
      OAsOsHz5agrdfsyWSDr06ElqXFhFrrqfneuWsn5XHrqikNC8Ld3bt8BiVPGX5fLNV1PRw2Mr
      fghFwWyNoGP3nqTEhqHImgUhRAMW9JXAq6e/x9szVlF6eA/7nSu4+46fURWoCAAF5PqieaJV
      SrXSdHl0Mjr0pE98FAYCHNm2lM+nzuOWK87DpJcxZ8YsmnQfTv+sphTu3cj3389k5GVjiDEr
      FGxdwpxN5Vw+dhRhipuFM6eyWLEyqFMz9ICPMqeVCyeMIQbQNT/5OZuYMnUW1064GJtJhkiE
      EA1X0NcBJGZ1ZZSayO5l05l3KI4LRp5zfOsHxWAkpUUH2qZGVSNNM6kts07620hCZlsCP3xN
      QNNw7t9EvjWN4VnJGFSIS2tD1vp1ZO/IY2CraJYsXE2fi24n0moEwujVqwuTZ6+le7sUrKeW
      XjUSl9waY9l8yv0BCQBCiAYtyAFAJTGrK4lZOgdS7DTNi2bk4M5B2/5B1zQ8rjJ+WT6PxPY9
      MRtV9h7cS0xiN6zH6mrFRLOkeH7MOYTW0sHeUiOD40zH07DGNcHiWk5JWQDrSeXSdR3N7+Xw
      9hX447IINxmO3/N6veinnGGgaRoul+tXy+rxeoPyzLVB1/XffDYhRMMQojEAheQOAxlWmMcv
      2atx+U+uPFWaNm9JcmxYNdLzsW3lUrJ35ZCXl09yu75cNKA9BlXB7XRijbNX+rQl3IZ3nxNd
      c+HChuPkmwYrZqOG1+cFM7jL9jPz66+xouMsLcEQkcy4MUMxG068/auqeloA0HUd9TeOtjTU
      52MvFQWDwfD7nxNC1GshCgA6ZXuXcu0NfyHHqVO5AWBjwuMvctv5HauRnomW3fvToouPwiP7
      WLFwAVPna4wd3Bmj0YTf56v06YDHh2oOB8WIER8+4HgbQPcR8J+o4KxhKYwYM4ZoXcfnKmXz
      uiXMmD6fS8cMPd4FZDSe/jPpuo7ZbP7VEp/pO/WFAr/5bEKIhiFkAWD7ip+h3VhmPX8fEZbg
      vA2rBhOxiRmcd2kaH/3nZXL6tCM2oSnr9h4mQDMMR/POyy0gPj4Tg2qnicnDYQ+kWCrS0EqL
      cRrtOOxm8JxIW1EUzPYIOp0zggMbX2Z7cT86xNmCUm4hhKiLQnYofGqLFoQ5wrD8wQEAze/D
      6fJUvhhw4VEsWBSFhLTWePdvJKeo4jM+Zx4bdpXRLisZDEa6tU9gwZJf0I524ezatJ7w1NZE
      WX6lXLqXQqeOw1yPu3CEEKIKQtZPYW/Rm9iDT7Dsl+FkRJ7cnaAQFh1HlMNSpXR0v4tVC+ZR
      4LMSefQ7JQVHaDvsQuItRlRrIucP6cCC2d+xNS6K8vx8UnoPIy3ChKJAZr+LOTD9a76btR87
      Lgo8Noae2xaDAhrgcR5h6U8/VYwT6BpFuYeI7TmM1DDpAhFCNGyKfuroZlBoZE99mduf+QTV
      4sBUqRVg5Yq/PstNw9pXPbWAH5fLidfnBxRMVjsOqxnl2EotXcftKsfl8WE0W3HYrajHV3Hp
      aAE/paVlaKjYHWGYTQYUQNcClJWW4Du2XFlRMJksOBy2k75/Zl6v9zf7yXccKOC+V2dV+Rnr
      kibRDt56YHRtF0MIEWIhmwWUNfhqPux40RnuqUTGN6lWaqrBiCMsovJsnkrZKVjtYVjtZ7yJ
      ajARGRV9+h3VQHjk6deFEKIxCFkAsEbEkR4RF5rkhRBC/GEhmwVUcmgXG3cdPsM9leTMNqTG
      R4QmayGEEFUSskHg/Wt/5IV3ZnLyCEPAW05BqZGbJz3P1QMlAAghRG0KWQBofe51fDR4QqVr
      roPreebN7+nbMSNU2QohhKiikK0DUI0mLBZLpf+iUrNI9h1mxZZ9oclWCCFElYVsDMDnclLi
      rLzvv690H7sPHsFcKhuNCSFEbQtZANgw/WVufvbL0+40aTeUmzs1D022Qgghqixk00A7XnQf
      88+/q/JV1YDVav3dRVZCCCFCL2QBwGC2EGa2UJiznTXrt+JVHLTq1JnmdhtS/QshRO0L4Z7F
      AX784J/8e/JCLOHhqJqfMheMvP5+/jSuP0HaIFQIIcRZClkAKN8+j39PWc9df3+F7i1iUXWN
      PWtn8dxb79Glcxv6Z8kqYSGEqE0heg/X2bF+DQldzmdot5bEx8YSGxdPl8Gj6ZessnHXwdBk
      K4QQospC1hETFR1Nfs4eilx+ji0GdhcdYk+Bl6jwM+7aJoQQogaFbBA4pcf5tH33dh54+DEG
      ndOdsEABixb8TGFkG/q0axaabIUQQlRZyMYAVEcyjz7/AtO/+Yp5c6bjU2106jOGe0aPIDVS
      DlsRQojaFtKTy8MSMhh/831cdtPJVxU0XZe1AEIIUctCFgA0fwlfvfM/Nh0qo/KRY2b6jbmK
      oR1TQ5W1EEKIKgjZVhC75n3MC18t48qxIwizGCplGeWwhiZbIYQQVRayFkDA76dt39HcctM1
      mA2//3khhBA1K2TbQWf2Hg4HNlLi84cmCyGEEH9IyFoAuimMWM9mrrv8UszqyQO+Vsb++XGu
      Htg6VFkLIYSogpCNAexY+DUrC6O5fOxQbIaTA4CRds1iQpOtEEKIKgtZC8BsMpLaeSDXXn01
      ZoNM+RRCiLomZAEgsWNflI/eY++RPGIqzQJSsDrCsFtMocpaCCFEFYQsAOxcs5y9O5Zz/913
      ntIFZOWiOx7miv6tQpW1EEKIKghdC6BdPx55MuMMdwyktmwaqmyFEEJUUcg2g4tKbsXg5Mpv
      +VrAT3lpCbpZFoIJIURtC+leQABawIervJTt2cuZ89Mi1q75hf63PMYtwzuEOmshhBC/IegB
      QNd1dF3D5yph2dyZLFy+ksVLlnG4yEubPiMYfd1tDDqnZbCzFUIIUU1BDgAau1fN5t2PP2fu
      4mzsiVkM7t+H2x+7kKXvvUqbK2/gst7Ng5ulEEKIsxL0ALBz5TxWHHLwwkff0jU9DqPBAJSz
      4WPZEEicHV3zsmHZAnJpQv9e7TCpCjtWzeK7nzeS2mUoIwd2xCRLTYSotiAHAIXktt1pueob
      Hrt9As3b9aZfn2507toaX0D//a8LcQo94OaL5//CN3stJKt5fPz9IB4fHcHjry7ggpF9WPbF
      ixwsu5vbRnWu7aIKUe8EOQAYaNV/LM93G07BkRwWzJ3Jsp+mM+WD1ykoKKPn/Jk0twyiY7sW
      OMwhH38WDYCzaB8rS9J45+X7sSo+Pn3+USa+4+HOx56gd4tYPP2zeOqdlThHdUZOmhaieoJe
      CyuKitURQVJ6BONvbMWYK8s4cjiH9csWMX/JCv7z93mMuusJJgxuE+ysRQPk9R4mtmlbbEYV
      sHDx2IH8398W0TIpBgWwJiSS4CynCCQACFFNIX4NVzDbwklp3oqU5q0YPuYKDuccRIlICG22
      osEwGiNxubYf/9uW0YKeyYewWis6/XWXk1KTEVttFVCIeqxG+2EMZhtJzc+0OliIM7M7ktHz
      PiTHpZFkU8GYxvW3RGE7Ouibu3M7nvimRNZuMYWol6QjXtRpBlskN994JYr/2CQCO81bnOjs
      OZhbytBBvUN1spEQDZoEAFGnBQJejJHJxDnOXMV3GjK2hkskRMMR1ADgcxWy8Mf5FPl+61MG
      WnbrS/vU2GBmLRqoktyFXDJwIl3GXcptt95IVnI0RoOKTPsX4o8LbgBwF7F4zgx2l//Wpyyc
      37StBABRNbqFC299gM6JeTxy7YVEdbmAu++6mY6pcRgaZSDws331JuK7dpRxD/GHBTUA2KPT
      eeTF/wUzyaN0yvL2s2rNBopcfuJTW9OzUyZG5eg/f83H9vUr2bw3j5iklnTv3ArL8TMIdNzF
      B1m0ZA0urHTq0ZuUWAcKEHCXsGzxQnJLjzZZVCNNU1vRtUMLTGrjq1rqKtUUzogrLmPE+FtY
      9sPHPHfbWPzJ53D73XcyqGMajet/lYeFU6ZxjgQAEQQhHQPwFB1kweLlFLv8J1010Kp7P9qn
      xVUxFR+bFs5lY5GJ/v0HEu8wsn3VTD746jATxvTFpPpZMO0TCmO7MHxEN/av+5nPvj7AZZcM
      xaqAJ38rb01exNirryDOUMy0rz+l9eBxdEyNRPOUsXVrPqNuuYoYQPN72LFuHu9/sZ/rxg3E
      JEdZ1i2qkV4XTGDyeVezbfkMXn7mNp4LpHHr3Xcyul87GtZmI7u5adA1bApwynNpHN59gIgF
      M7GRzjvz3iPL2LCeXNSckAWAQNEv3DHhdgrDm+E6sJOI9DY4fHnkuqO5ObVjNQKAQlK7c2gV
      GY7h6Kteq54j+GnJ65R4e2Ev2MIvZdGMH9keq0mhRdd+7N09mfV7SuieamfJrDl0G3UtyVFW
      FMXGiIGd+GrpClqmnHv04RVUVUUFVLONVt2HsXDJ6xR5+xJvk2Mr6x4FVTXQqvcoXuo2nD3r
      FzJjUTYl/doRXdtFC6oIOvXoREJCV26eMJYm4eaj1518NOkVek16iJaoWA2Naf6Tjs/rx2g2
      NcKuv9AIUQDQ2bl0NoeTBvP2Mzfx6h230/GOiQyJPcLzb82kXYukahUxKjripKR1ig9soNiQ
      gN1g4OD+nUSntCLs6G5gisFCi2bxLNmzn67J6Ww7HODStDCO9RZFJDXDWLKZovIAp4cgHXfh
      LsqM8TiMJ/5hBQIBdL3yXkaapuHz/fpot9/v/9V7dZ0Ov/lsNSmgmwhzmH+lPCqpHQbwp3Ya
      +HzUjRIHSzg3PfEU6xd9xwtP/JX2545n/AV9cZhMGFQDRpMJExDw+wnUdlGDTqdw92qef/bf
      LNvp44aHHueSzhE88/jDrN5bRET6AJ5+8h6aRcnBUn9UyAKAs7ychMRUosMjsFo0NIzEpLUi
      xfc+SzfvJ6NvZvVT1fzs2bCY7+Zt5PxxV2I1qpSVFOOIiTzpjUDBERlG+bYydN1JKXYiTnpJ
      Usx2LIoPj8cLJvC5C9mwejUOPUBZYR6H8l2MHDcK20nN6jMFAF3Xf7OSDwTq8T/L33m2mmSL
      bMulF1WhPJpWMwWqSQYzHQZczBMdejLj0/e5594ZjLvmEnwBjYDfT934PxR8fmc+r770Bt0u
      f4jrE83MeO8NnpgbRvdxD3Fb2yZsnvcZ734+j4dvGCbrP/6gkB0J2TQlhZwZO/AELGRkxbFo
      zjza2zLZfagQq8db7RS9ZXksmPUDu9yRjJkwgcQoO4oCiqKga6fsNKrrKIoCKCjonFJ1o6Mc
      vQ+qwUJ0bCwRQKTDjhbYyc7te0mLbXt8DMBsNnMqr9d7xuvHWCyuaj9jXaEoCjZb3dhcoSQv
      mwdve4fRt97EsP7dCTM3vn/yNlsmV//5cfpmL+bdd19nwRIng222Brv9RWFBDobmIxh/bncU
      oMX9l3HzpOWMHNiNSLNC0sUXs/z5WXhttgbW7VfzQhYAEjoNYECTPRxxBhhy0TUseO5NJq32
      E5Hcnv7tm1crNW95LtOnfImS2pOr+nfGZjpRCURGx7GlsACNpKNvAzrFhSVERKegqnZiDG4K
      AxB39IVed5XhxozVagY/GEx2ktPSiDmaXousTL544y12t8ukZaQlCL+F+CMCXhcR8Qks/OQl
      PnvXzoXX3MCI/l2JcVgaVT+wajDTossgJj3Xmew1O0iu7QKFkBbwYLWGHf//a3LYibQ5MBz9
      N6xaLFj9gQbW5Vc7QjYIrFib8fA/J1b8ETWAZ/7diiOFbuKaJhLpqEbFqgf4Zfk8SqM7csWg
      rpz6AtgkJYOS9RsocrUhxmZA85WzdW8BWQOSUQwmWjezsmZLLue2jUNRFHL37ESNTSXKrkLJ
      GcqtGDGpGj6/nF9QN6gkt+nLX+58gm2rF/PR+28w9WMT511yNecN6E7T6BPjOw2OHuDQ7s3M
      /X4GC7K3UV7uxmyzk5TRlVHRcXRtnYaxAT57eGQGJTtfJHtvL1pEGfj+nS857IJf9uTTJT2G
      PSuWURCf+P/tnXd4FNXXgN/ZvpveK+khEFpC6L1K791GEcWCfoJSrBQVf6KigI0mNlRQRKUj
      IE2pSofQQk9ISC+7m23z/ZFQpFo2JJnM+zz5Y+fOZs7dmbnn3nNPuTppk/n3lNkeQHryLvbn
      uNO+SU2UgoCbdyBunsUcP3iUwrBYQrxc/t6/shZw5OQlops2JTcz47oGFV6+Xmj9Y2gYeYKt
      23bRoHY46cf3Y/KpTY1gFwQB6rfvzpKlqzisa4+XooDf916gSbvuaAWwUjLbyMrIKLGnOuyk
      phwg16sGER63N+/I3HsEQU31pNZMTWrJmYM7WPL1F4z++lNa9xxMvy4tCfZxk9yK4NhvS/nf
      JytJaNeF/kOa4apT47CaSDufwvzXx1NnwHM81ashColpQI17IA/3TeKlZ57Ew0OFe91+vD8u
      kDemPo/doCM/38Hjr74p57FxAoJ44+6mU3Cw97u3+OR4JLNfGHxt1i4WMWfcWIROT/NYx9p/
      71/ZzBw9fIjswuIbGgzUaVwXd5USRDtpp49z5lIObr6hxMVUuy6QS8Rq1CY4DwAAIABJREFU
      zOXQ4WOYRQ3RNeLxc9chAA6LkaOHD5BrLN2wFRS4+wQTFxuG5i7RRXfbAzh1MZuxH677e32s
      YAR4uTB3XI/yFgOAnNQtzF9axLinu9zQInL5zEG+/WwBf2aHMWPWcxKzBxfwzsTX6PTsJOoE
      3jxZcpizmfjcNMbPnI6vSpr7InarhWK7iF6rQRAE8jPOcvD4RarVqEOwhx6lWiU5pX+vcbIS
      FbFZLVisNswWGw6bBZPRiE1R0paXepB9p7No8k+qgal01KzX4M7nCEqComoSdMtM0wJqgxeJ
      DZvc1KLQGKiVePNxmQqEUBKncYsG/CLq8vTkmdgt/9ypoOKThZUIQvxuXeZG0HpQx1NHmujA
      V6K+MEq1BsN1oTju/uE09w8Hsvlp4QZaDO+NnFDmv+FkBWBn84JJTJi//uqR9stnXWsWFMQ2
      60P7BLkmgMzfw8Urnl5d7+xSq7zDSqzyUg0v5R+s2nqS+1vHIFDq8Va6YM9L2c7ydJEBiqoY
      BWzh3IlzSFHt344r911wsrnP6TWBW4+YwuaHXubAsvf49FQ4b4/txxWnHYVShVarrWK5W2T+
      CxqdDzGR5S1FeaBk+NgXeePF8XSYrqBh/Vq469XYLUZSjuzjohjKO7Peuy7nlXQw5Z9myecr
      buWjUUo+By5a6X8PZbqX2EzZbF67jjxDBJ3bNUZrL2T1koX8cdbEfQNH0LS6n9Ou5WQFIKDS
      aFFpNNTpMoIXzFrcXV3kAV+mzMhJO8wfx6y0apVwk4dYZUfrE82kD7+hKD+H06fOkGs0o9YY
      CBs9Dj9PN7Rqac7+RWsxP8x7E0u9ATSK8rzFGYWYbdKsAC0aLzH5/54h2z0GN/sWtuzcRzP3
      8+wwR9KuhivvTRyD29zPqO3rnKG7zOIAXH1CcKQd54sP5rJp+z7MCjfqt2hP/749iPJ3K5vL
      ylQ5jLmpfP7mm8z+sgEvThhD4+pB5S2SU1EoICv1LCdSTlFQZEatd8GicMG3Qc3yFq3M0HvH
      8spLjzNmGUyc8uotAt4uMfvFJeUgWdlzasca3NuOZtLglihFK+vnTOSryw1Y8MoQVAI0DRN4
      76c9TH3EOVXwymzOJBrTeH3CWLacMNH8vm50btuQjH2rePW12VzIr0rWO5myJKRGe+Z89z1v
      PtGVgxu3kFXeAjmR3IsHeemJEUyd+Rl/Hj1FekYG508dZuln7/Pgg6PYdjyDsvDhK28EQUm9
      7qNoxDZW/HEZCXbxtqReKKB2vZJ09AqlhugGzWgQG4ZaUZK9wDsxAeHMWZyV+KTM4gDO7VpB
      sr4RC6a9gK9rSfY+U+/2TH7+dbYdOsfgZv88F5BM1UQU7aSlHOFUupWEBvVw0yg4f3Q3fyan
      EhxXn/o1w4hv0Ib4uziLVS6sfLdgIQlDxvNys1oYNNfMPaLdwoXknUyd9SGJMyfhIsGMoGqD
      P5M/+gqLyvUWrd70fbSfJD2AgoJcWXXsIvb4EJSihVO7tvNnbmPsgBKR/ORjEFrNaTP3Moul
      yM/Jxcs/FHf9NV9dvac/oR5qcgsqb54cmXuL6LDxx48f8NaSXSgR8IlpzONdI5n92UpCq/mz
      dNlyBj0ziW4NwspbVCeTRpY5ir4t6mC4IdxXUGoIjW9GC4+1nHGI1JLYVoDFnEXysSziasfi
      dstNbg0hkdJMhhHVrAPZ4yYx9fQefMznSbFUo5XPMWZ/tozEMC3fzf+ZB95ZWPEVQGStBDLm
      z2ftzoY0rh6KWizmxJ+/8NtFG09EBpbVZWUkhqXgEou3XOT9uZ8R4q5iz3fvMXn+Jqa8/g61
      g13JTt7I/5ZuoEOD4Ugrc5M3KvtpTp3PxTvS64aAJxFL/iX2Z5vpJrEoYIC89F2MGTqNkEaN
      eGDECJrXr4mLpmqU/1S6VOO5ya+wfcdeijXxDGrWBE8hm2/mfMK3fxjp8n9TaRrsvCe97DaB
      q7dl3OA/+XD6S3zt4olGNJNrVtDlgdE0jnaeG5OMtDEZz+Id3oIQ9xJf/wY97iNmx1bCAktM
      A94xNQk2HiQHkNa0wpW+PRvx2tRxbG7cllaN6+JR6gZ66uAu1qzfQnzfifhI0A0UtHQd+Rwt
      azr4YvYrfK4PZ8jwYbRKrIm7QSN5ReDuH0mnnqW+z6KD3Mt2Etv1IlHjSnhUuFOv5fRI4KKc
      yxRiIMDLlXYPjSex/SkOHT+PTdAQWaM24f4e0k3eJeN0lCp3zMZk7CIoBSg8f56UnAwsFgfo
      FNiNRRSpVBKb/ZcQ1XwQ71SrxfqN21i55Etyi8yotS6EV6/J8Inv0jBOWh5P16NQu9CofUca
      tevF4e1rmT9vKl86/Ok9ZBhdWtTD00UnyXGk+OJ+lh200r9zA1RAZspOJjz/Oq7xTXExnuWc
      ozofvP08nhrndN7JCsDGjsUzWe1owTtPdgEEvIJjaBksb/jK/DtcPCLxK5jFWwt96VHHlY8/
      /oFGNcL5fsVWBrSvxfZvF2GLaiGxPEDX8AmrzaBhfzNvlhQRlNRq1pX3mnXh7MFtLJwzmy/n
      KBn4yFM82L0RUivaenTPdqxe7UsHZgu/fv89HSfOZXDjEBAdJK94hznLjzO+X5xTVkJl4z4g
      loQu3+lPRubvoNC48virrxGUe4jFK35nwJgpPDf2adSHv6Nfr36syQziyf5tylvMe44oitht
      N1eqky4C4XVaMvmDr/jy3WfR52diLG+RyoD8PAvePlciH/K5nBtA0walG96CgriunSjat89p
      ZUDLYA/Awanda5k16/ht2tU0uK83zWv+k7rAMlUZlSGQ4WNf+suxRyZ9wCOTAIrYvXE32nZN
      cL/lt6WJw57OnDfmU2RQEFznPgZ0TEIjkf0Ag0cEjZNur9h8oxIZHJV4DyW6d9RoUo8Pv/qa
      4BGPkBjhTkyslnPn8giP9MBenMPimd8Q0+FRnOX4VQYKQMA/qjYdOza7bbtP0K3Cu2Vk/g1F
      7Fq/g+AqpgCUygCeeOUFzAVZrP95I+cK44nxkEZ6BBfPKJpJKqbj7+NfvRVPPKBi2svDeMXk
      RYSfSNqGI/zsbWP3gQv0HzOVJ1tFO20jvEwUgJtvCPHx8c7/1zJVDospjTU/bKTgtmfkk3wp
      9x5KdC9xcPH4AVKy7NRJqIunXk1+2jF+Xr0Fwac6/Xu2Ru/hT4+HBpe3oPeUnNQjHDwLTRvH
      o5ZcDJxAYFwz3p2/mJzMS5xIOYvJKuIdUI2J1YLwcnd1am41pyeD8wgMJ9Ih1S05mXuN3VzA
      /GljyY3pTL2wW83xTaTlSbM44IGV8/jf4h34uamZ/3UoL40ZwNxpb+Jfvw3CnsW8mJLL28/2
      lFxFsLtRkJnCR6/M4OOarRk/5kkSo6TmVi6g1hnwD43CPzQKRBGLpRiUaqcn1nR6OuiErg9T
      S5RYaKJMuaHziOKFFx7lxXWuvDN74i3cPTP48MWvy0GysqaI9b+fYuKbs6kTqGHH8gW8N30G
      tbo8w1P9GiBaBzBpwjRy7T3wlmJh4DsQVqcr85Y04Pjhvexa+yvhTwyUTH1gR9FlDqcWUys2
      FAVgzjvPh69N5s9MBVrRTEzboYwf1sFpA7eTF1ACKo0OvVZqzlky5YWgUNGwz2hq5Kxk5f7s
      KpQY7DJWMYpqQa4ISg0NWrTDmpVFg6YJCIBCZSDeTctF0VlpwSoWosPOpTNH2fXHIYxWByBy
      8fhe1q5ey4FT6Ri8Aklq2YVREhr8AU7vXMnGQ5dKP9nZvnQhBdV78977M3h3+msEnf+J73dn
      Ou09kOsqy1R4VIYA3pj7JUbVrSYWHnR+oLukBoES3FAq8ygudoBegdrLm7qRSQQElLyyoiiS
      a7PiIsG4WNFh5Y+fPuGtb7Zit0G1xA482SmE6XOWERjoRcqi7xk5YQrt60jPkzA1tZCYxMDS
      mXk+ySdh8Ivd8HdVAG4MffZ+Xp31GwMa9nKKJ5CsAGQqPoKAd1DEbQZ5LdG1pBho6I2/ey7H
      z2URGOcHSg96DhuEf+lb77Dmc8IsMOKW9ZIrN8V5F1m85TzvzfuKUA8Vv33xJi/MOcHrr88k
      PsiFjIOreXfVr7Ss8wBSKwbq46Nh7/E07PGhKAUVrm5aFFcN/yLmy5cRXVycdj1ZAchUeETR
      QU76eX7ftIZtu49QWCwSGFWL9h3bU7d6BC5aKT7GAl0HPUjG1f00DRHx1xRd0YWD1GjeE40E
      y+0VFpzDL6Y1oR4lw3vzgd1Ytm8H4QElA59/zToELF5GLuBfjnKWBTVadOSz597kB2817RNi
      iIjWknzkEhG13clMS2HWa4vpNHleRY4DkJFxHqJo5+jGr3lh1o8069CJug0TWLN0HXHxNr59
      /xU+82vESy88SZiH9LIB+YbVwvc2be7RreglnKZQFHGTmBeQSuVCsekcDhEUAhgvpnImLwur
      zQEaBQ6TCZNSJbk0EAAKt0hemjyGj955i8/eLcTLxU5m0XZ+8oTzWQoef3kKbcOdF+8hKwCZ
      Co0l/yLzv9/DR998R4ihxNzhyLpMo35DefqJUWxf8iHzlmxg6qNdJWgNvxMONn/+BdVffpkE
      hbReY3efGPSpHzJzcQDd4/XMeHcxiXER/Lj+Twa0rcGWRYuwxbSWbP4nj+CavDDjM+zmQs5d
      uIjJKuLpG0Sgn4fTc/dIz4AoIymMxrP4x3W8OvgDBOm0XCgygqCiaa++uJ09SWY5yijjXBRa
      D56ZMgVdyhbmLFrDgOff5IVx/0fh5o/o0O4+froUxFN9W5W3mGWOUudKZEwc8TVrEFwGgz/I
      KwCZCo5WG0x+9h6sULrkd3Di7Hnqa0oNAAoBlQQ3QuESj7Zox8ozhWhUt+5fUa4/615++R7L
      dW/QuFXj8RemXv0sCAJP/W8+TzhEBIWiygW/lWDj+9dGsOBEKP+bNpG6oe7/edUrKwCZCo3e
      M5TmgZd4atx0OjSMJD15C3/YanO/nwcAmSknMYdUu62tvPLiz+CHOnNhhwdz3n4Wj5sM3g6W
      vfmOZM1e9uI8Vi/+lK+/XcHZAgs2mwOtWkG1Gk0ZPGw4XZrWpIrFvwFKeo6ZgXrJF3w46Vka
      9XqSoT0b/Ke9EFkByFRoBIWWziNfxX/TCn78ZTt+tTvxdr+OuGlLZsWeUY15JkyK5QIVtL7/
      GRYvH8naA4N5tF3cDe12DBINuHQUF7Bg2guc8WjKa3O+xMOgQyGA3WYlNzWZT+e9R3r+k4zs
      nFDeot5jBDSuvvQaMZau9xdSaOY/ewPJCkCmwqPUuNDwvkE0vG/QTW0qjR5XqTmDl6JyC2fc
      q8+yJz0XC9zg8y4QGBuDuwRNIflZx0jVNWTKsw/dlOzNzz+AyVO8eOuD7eR1TsCjfEQsM3b9
      9C6frM3j/mFDaFm/BtrbLHPUOle8dP/9elI0nspUIc7s/YFnnp7K7hNpEkwTIRDbqDtDejS+
      RcCTQIshQ4hQSu8VdtgtCCoDt9n6QKnVo7RasN1bse4JxlyBuHhPln40lUefmsCKrfspsjir
      /MvNSO/pkalS+IXXJyncxntTX+TDRRswl7dATkWkIOsiBw8cJrPADIgUZZ1n26Zf2XXwFA6F
      UpKboe4+1dFd+oUFP20jNSsfm6NEtdutZi6mHOHz2XPQ1kuSqBuohoSOg5n9ySf836DmbPji
      bUY9NZYfNu4mx2h1+tVkE5BMJUXEYRcxeEcw9PmpDCnKJjk51Wml8ioClw5uYPI7c7mYacY/
      OpEnRg1g9dzppCkDyDt3gpbDpzKqax0EiSkBlcGH0ePH8+GMd3l+qRU3vRZBEEG0U1BYTMOu
      D/JYz8aSnr2qdB4ktetFQsuOHNm9hW8WzWLJpwa6PTCcbi3r4+Wqccq+l6wAZCo4IpaCTFYv
      /Yptx80MeXQkdYP1rPxyNqt3nSY8qStPDuuOh4s3dZOklBLOyrLvf6L3s+/RKTGY09uX8+bb
      02gzdCqvtI3BVpTGM8/NoLDzW7hJpBTkNQRcAqoz/n+fYC0uJO1SFjaHA43eDX9/HzQSNHvd
      DqXaQJ1mnandpAOnD/zOl59+yEdZj/PCg83lZHAy0ke0mvjmnYns0zWiUS1v5r8+mcaNIzhp
      DOHRx9uzfcU3LPgpkDEDm0jMEyiNfGscjeqGIABRDZsQ991uGjUryQekMvjTxE/HOYdILYmV
      3xBFEVEEhUJArXMjLMIN0WEjPy+fgrx83Nzd0Kgk1ulSFEolylus6ASFiqiEVrw6syU2q9Vp
      qx9ZAchUaIryznKERN59YRQKoFuSNw+9sYN5n4zF30VJvQh3ps7cQCFNcCtvYZ2KHoWikGJL
      STpoW1EhadmpFBXZQatEFEUKbXac4AhS4SjMPsb2Qw7ua11aVla0sXr+ZN5auAGzqCSp02Be
      fn4UwW7Sc4Ot3bYbDs/b724IgoBa4zy3t6qzlpKplFgtl/H2ibr6oLrHxJAYEoXBUDIDVHl5
      4W+xkF9+IpYRftQMzmPmB19yMuUon8ychSosjGWfLcFkF8k4tI5NBW6ES9AcYi5M5XDyxauf
      C5JXsuiwHz9v2sbO7ZsYGFXA7G/Wl6OEZYd3SBi+LrdX66JoIi0tx2keb9J7emQkhd4QQea5
      XRSVFr46tmYtm88cIiu3GICiC+e46OKGTznKWFZ0e+wFGrql88HMuWhq9WPqpAm08DlDp+YN
      eWjqj7z6ynO3NBdIjd2bdtN/1FDctUoQVLQeOBiP8ylklbdg5YF4gk8+XOs0ZwfZBCRTodF6
      BNO3kYFe3QZRP9bAKUsM745uxrSJL1C7XiRHfvuN5k+8IUlTiKByp++ocfQRRQRBQBAEOjw0
      nlaDxiAoVWjUVeP1LSjQERSkvrrHIyiVqASQZjHMuyOKzot4qRpPkEylRRBUNOk3hkXNLpJr
      FgkKDsFNr2C8iz/rdxxl0PNv0LxuVHmLWWZcGfivflYo0eqUOOzZrF91mGadWmCQmBeQQiGw
      dckH5FzeS1hoECcOnqf3dV3MOHaYXJ9ACZYBhX0rZ/HYhDlYNdrbODWYqdnlFaddT1YAMhUe
      QakmIDSCgOuORSe2JjqxdbnJVN44HLn89OHrTP8snOfHj6Nd/RhUEqkO5hnUlFnzw8jJz+To
      3v3gH0aApnSocljYsfsYHToOdlpVrIpEjfot8fP8lh4T3qVT7cCb2kXxGPMW5DjterICkKng
      iGSfPcBHHy0gQ/BnxKgnqBsosHDmNH7ZdwHvyCZMGP8Y4V7Oq5JUGVCpInl3ybecSD7E5l/X
      ExEbQnUPafwGSpWO0MhoQommTr3GDLy+UVDSfuCjaA3S6OuN6ILqMW5EG95fsYkBHSfgo/vr
      Nq3oKEBNFVQAdquJM8n72LjnEg8M78P1t9+Yk8bu3X+SbbSi0XtSt2FDqnmX1A8VRRunD+7m
      wKl0REEgMKoW9eOj0KoU2Aoz+fnHn7G7eJX8EIKAVu9B3QaNCPF2oQrsr1V47KZc5r43i2od
      H6atKpX3/zeDAa28OWNozLS3nubElu9YuGQLr47qLD2PBtFO+rmTnM80ExZbHX93/bU2AfIu
      5xOe2IInk1qWn4z3GkEJtnxSTucRHRWMxKxfgILm/R/naN7PpOcU4RN0g3OzYCC0mo/TYl4q
      hQIoyDjFiuXruGwRyMqw/2XzR7QVsGHVGvzqd6RHXBA5Zw+xZtVaug/sjZdaIOfkDtYdLGBI
      3+64KExsW/MT29HRum4oot1CfqGGng/2wRsQHTYyLxxi6U+/MPShnuhvTEUoc88pKjiL0b8V
      Q7uVmHv0udN57ocU5n34JFG+eiL69mPvO6vJA8nlhjm88RveWrAcs9mM6BbOuMlTaBR5pZcO
      fl24UJIlIe9GavJGxkz4gsR+Q3n8gZ6E+riWt0hORe0exhNjRt+mNYoRj0Q6bbJTKUa4vPQ0
      ghLaMfzBXnjc8KznnTtCpiaMhLhQVAolfhHxxHoUcuBUFqJoY/vWP2h+X3s89CpUWjeaNK5P
      yoG9FNpu3kkXFCr8qsWjKjhHkU1KWWUqL3Z7Ea6u15w8E9s1J8yrGr4eJbNhhV6Pi8WCqbwE
      LDOKWLXmD8a8vYDF333H011CeGvKDNLKICFYZSO28WDmf/oOdVwz+WzeUrLLWyBnItpJ+XMD
      UyaM5bX3F5JyufCGE86z9PvtTvOAqhRTh9A6LQgFLMa0m9oy0s7jHZTIVVOZoCYs2I8NF9Nw
      xBg4l6+kjd+1yDmdXwBa0y7yi/4aRSmKIg67lcspe7B6x+KmvrbFZLVacTj++pM7HA5MptsP
      O8UWy7/paoVAFMU79u1eIoreZF7ejtHUvmTZ6+pN3ZBQHDYTJhs4si+RptGgM5kkpgTOYyaK
      IC8lZoudht1H0u3oeN74aDn/e6oLShxYbDaKzWZMNiluh94JC/lGDZ2HPEpPAAnde+OF3Uyb
      tYTGHdtReHwb//d/+5g+4zUirpSEEzPYvy+Fbr2T5FxAACZjETpfl78c07oZsJw3IjpMGDHw
      l1alDo3KgcViAQ2YCy+wdtkydIgYC/JRuocwsF/HvyScEgQBxQ11Z0VRvOnY9dyprcIjCCiV
      FWNQcfEMJEy8yKFskQQ/FRDN0xOir7anHDmAW0QMrhVEXufhj057GaMJvN2UoHRjwOgJ7H18
      DIvqRDO0TRwKQUChUFaYe3XvyGf1olX0nfoUN/vJVG6Sd++h5bAxDGkWBY4uhH08mWnvf8PH
      k4ejUYAoKlEoFCiVSlkBAKhUKuzWv5aGcBRbETRuIKhQYb2uoDggWrHbrg1wOtdQOvXpg5co
      YjUVcGTvb6xcuZkBfdqiL61IoVLd/DOJoojmDjk51Lf4TmVBgDv27Z6i0TD69fdu2+wRUZ9h
      DaMrjrxOw5v6sXrW7zzGo13qIQgCGr/qTH5rIo8Me4yjf4zAOyOfeI1acgFhoigiOhx3SHdQ
      MgiqNZpbFMqp3Ajo8PFxKX2eNfR6bCIHRj/CF1vb8ESHOBBVKBRK1BqNUwbvSjxNLcHbL4jc
      rPTrQqNFLl/Owc/PC6XCgL+6mPTia+c7CvIwqgy4GG4osCcIaAzuJDTvgk/eYU7mFiNTMXDY
      LezdsoY1W/dhLS0OcmLnSt6aNo3fz1iu7gdIjXYDR+BTdI4s0zXzo09MS5asWkaCPoNUm4sk
      S0Lmpm6jWYgPIWERRETc6q8Bn+84Wd5ilgkxNQL4Y3syV3Z6VC7+jJ36Imtee5xFW487/XqV
      furgHxGHZfsG0vJqE+qhxWbM4vCZApL6hoJSSVItP7btPM7AlrEoBIEzRw/hWi0OT62A41Zj
      vGgh1yhSU/YAqhCINjPfTnuGlZe9CFem89XKZrzWy51X5+6mf9827F/+AZeKnuKZ3knlLarT
      EfQB9BvQ86bjGvdghj77Mg+XpoiQGp5+CQzp35zk2NHMeKzNLc5I55MpP95rse4Jfgmd8f1h
      Iit2xtGncRgA7qFNmD9/CuOfGcYcQU/1+iOddr2KrwDsxZw4cohLuUbslnxyC7PZsXUrWiC2
      XlMC3YPp3LYW235Zja+fFwWZGQQ16kCEhxpBgJgWvbmwYhmr11/EIJjILNLQvkMtlKW5RCym
      y+zeurUkrkAUyb2cineDDlRzk9risnJizDvLPksNFr4/BjU2fpjxMhMWGBk3aQoNIrzp0TiC
      1+fuwNg7CWmFBuWzadVOqjdtQbDXzSucG1NESAlB48qw5yfSrc/LHHugIwm+Nw5TOlSVeY/t
      DggKFx596U2sgvbaMUHAL7Ylc35Yy+XMdIrsrk6Lgq74CkChJigsCq+gEiNP7XqNrza56hWA
      QGB0fboFxmI0W1BpG+LmqudKVLxCpaNN9/7k5RdgFxW4urujLfXwUbn5M2jYw1jt16yNam0S
      bq4GSdZarYxYLJfx9Y9DoxQANd37tOHTKduIDPAq2avw88ffZCQXJKYAMln03gxSP55NQus+
      PDykN9VDvCRW9OZ2CLiHNWb61JHkpGUg+gbf0G8tUTWj0N7m25Udjd71pr0NQRDQGtwIDXNu
      1YuKrwAEBa4eXtwx1EMQ0Lu6o7/lSQIKlQYv75sTBgsKFR5eUkwkLB1UKi+Mxmu2T21kBA1D
      LqLTlQwJYlEReWq1xAb/EmIa9mbiU+35Y/kSpo4ZRWBCGx4e1Jc60YGVf/PuLggKDc16PHSb
      Vk86399F8r/Bzdj45ZNXWZUdy7OjBhPmo//PE4Kq9xvKVCoMrkEIWUc5f6UggDKCkU/2RF/6
      5GecOoHVPxD38hOxDFHiGxLDwFEv8NEHb9My2My7rzzL6Bems+vwGW4RyyhZ8tNPs3HdKlas
      +oXkc5kICmUVWQ1dj5KETgMJyNvFKxMnsHLHyf9cF0BWADIVGqXOk8ceH37dcl9PaJj/VRto
      Rm4x97VrKu0HWRDw8A+n97AxzPn4ffolefLBlHE8/twMsu3Sy4pvK8pk7twvMF/5XHCWKc+P
      Y/WuE6Sf3se7b7zGpkOp5Spj+SDgF5nAxLc+5sM3xxHto/vPlcEqvglIpmojKAiKjr9tc53W
      N3vJSBcBvUcg7fs/RptuA/ltw27sEpwGF+Se4bJRczVS/9CqRQT0fZXnetdFKUC/U5t59/tf
      aVbnAUkWArIVF5GaeglB70mQv/df0nyLopnMy8X4+lejpu9/v5akJ04y0if1+CZmf7iY1Jwi
      p9VJrRgYiKkZdtsZmlLvSavuHfGToDeM3V6ESnktfv/8eTvNWkRdzfzpGRGLT342eeUkX1ni
      sGQz7/VxjHr8CYYPHcYHP2y7GvsCgHic2TNXOa0kpPSeHpkqhc7gQcbeH3ho2Ci+33TIaS9G
      +RNIv4fuwyCKWMxGcnNzyM7OJicnl0KjGYcTywJWNNzcI8k6vpkz+SX5tMLDXUhNLS5R8KLI
      pSMHSXf3klz2V4BzO1aQGtSNZavWsnTBVA59NZ3F21PKbHIjm4BkKjXeoYm8Nn8xppyLbN1y
      lAJq41neQjkJh93I+m/msODrFaTkmFCJDpRKEVHtT9ve9zNh9CC8O+s/AAAY9ElEQVRclQrJ
      1a3QeoYwtE8dnh/+CO37DqZLYi0OLl9PM+8G7Fy3jO/WHuKJN96RXBoIgLOnc2jauj06pYAu
      NJHXX3uSR1+aRMOFC4nzUd/9H/xDZAUgIwn0XiHc1yukvMVwKis+nsLm/Fje+3YVwe7XtsHt
      xfms/momT740h8/efByl1DQASmq1e5gv6jTns0+/5PW1x8gutDAx+VdqJDRl+icfEeYtRcdf
      8PbRcTqjCGqVfA6s05HxA3cy8cUZfP7BBNycnPdPVgAyFR6HvZgtyz5j4bfL2HvkFHn5Vvwi
      q9O2cy8eGfEgNYI8ylvEMiCNo6l+TJg0An/tXy21Sq073YZP5PxLkzhtdxCjkGI2UAGDXwxP
      jp+MQxQRS9NeSDkCGqBm0xZ8OX0ZaQ3HEuSqBlQ0GzCWUynP0mfQ44z9v1YUO9EBVt4DkKnQ
      iDYz3701lsVHBSbN+ootv2/jqUceZtFXC+leW8/b48byy9FL5S1mGaDEZjNjtd3OzVOkyGyW
      ZGF0RDsnfl/GgK7taNaqE5+s2I0oKFAoFKWDfwZzX5uDFO+6yqcmD3SK5MCxa26uSq07D02c
      zRvDG7Nmya94xQZUrZKQMlWXotyT7DVW5/0pj6ItdQOJDfHCqDTQuudw4qJCmbn8F1rXfEhi
      NmE/WtSy8/obM3l4cC/qxkXgolVht5q5dPYY6374ktNBzQhTSW8OV5x3kblfbuTFj74iQMxk
      8tNPM1f3MaM6xpd6AjkoNhVLzOvrCgrqtRtIvRuPqvU06PIQjbo+hM3hvJm7rABkKjQ2WwGe
      vhFXB38Avd1OjtUKgkBgfB0Cvz1CFhBUfmKWAQIthzyPcs1ivvl4OnOMZqw2OwqFEp2LG7Va
      dGdav/skmbOqIP80XjU6khgRDATzzodv8vCTk0iqPp/GEVI0912PyPEdPzHzo6/JM0Tz1HPP
      Eiue4tXX3yO9oJjqHUbx2lPd5BWATNXA4BJJ4fmlnMq6j2gfPdaCS2w+co6H+5X4idsLCinQ
      6++cK6qSotC40KLnCJp1e4iC/AIsNjsKpaokoaFKksYfAJRKAwIZVz+7hzfjlZHbeOetj3jn
      recIkWbeDwBMF/Yw84tt9Hh0HJ62dFbOnQ46d3r+3zTq+sGPH0/nh71NGZDo7RQlICsAmQqN
      xtWPh3olMvWZUWh0KooK86nX61mifUq8QLIzs4hOqo9zcyRWLBRKNR5e3n85JjqKOHYkjaj4
      aDQKaa0C3DzDsV/6iTMFvYlwK3F9TOr5FB33j2HCC9N45skuGG+oAigVknfvodHAkXRqWQMB
      EV3+Mb44U5POSbEAjBzdj0nf7KJfYme5JKRMFUBQUr3l/cyMbcK+Iyl4hNakTmzI1fB4v5gm
      DIkpZxnLAbvtHK+MGIlH+7489+RQ4kJ9JGMOUrn4MqRbPF8t2cLLj7QvOah0YegL0/H5bDbT
      XpiK3qcJw8tXzDKhyGjHO9qldHYvYPD2JyjvWlS02scXRcFpp+1/SG8HSUZiiJjzLrF+9WoO
      ncsjMMAHpaOYjYs/4JmnRzN97o/kmK13/zcSQ6WuwWervqF3ggdfzJrHiTxTeYvkRBREt7j/
      2uBfilLrSa9Rr7D0hx/4+N1n8L7NtyszcfFhbF+3hfT8IgqyzrFh5a/sP3qUbJMV0WHjwPI1
      eCbVc5r3lyCKEo4pL0MsFssdC5GfupjN2A/X3UOJnEeAlwtzx/UobzEAcFgK+eTl0ZwPak51
      5QXWHjcwrpsXczYWMGJwGw6s/ZqssN5MfLBlFUwPXDWxWUyYLODqopdcFDSiicXvvMS3u9LQ
      YaNB/6dp436U97/eg6+3mtOZOuZ8OoMAJ1XDkU1AMhWaorwznHdtyptjHgUgYu6rvPjVWd57
      dzrxga40ivHgjVnrKaSl9PYBRBGLOZ/92zawfud+cvJN6FzciK7dnG6dm+Fj0ElvAPwbJP+2
      kKdeXMXQVybxwH31pbUhLugZNG4GfcxG7IIavVYNYnOmRdTn0AUTjVu0wNuJpdBkE5BMhcZm
      zcbbK+zq59bd2uGmDSDQq8TvR+HhjrfJTH55CViGpB/bzPABA/li4xECI+Np1qwZ9WpGknFk
      PUO69+L7naepiuv32q0fZcHsMaRu/YKJk+aTU94ClQEanaFk8AcQlHj4Krh0WYG33rlDtrwC
      kKnQaDSB5OWtv/pZERxMYmAYV6xvYm4el/U6pOcdbmbRZ8t45oPFNAr3+Ev6A1EUGTP2Es+M
      eZv7GryDhwSDwe6IQk1Mg/a8lNSuJEVEecvjRC4m/8aqDfuw3HDclH+K3/YWY8zZT1TSfXRq
      EuuU2XsVe3JkKht6t0Dc8o5xJKc00bMQzfOvPoBL6Vt/9ugBlEFhuNz+X1RSLmERalA9zOOm
      3DeCIKA0+NPc34WzovQqgt2eS3wz72cKSj8JglCSHqJcZXIup3avZcVvR1Fqdej1+qt/Op0G
      tVqDXq9Ho3aeyUteAchUaBQaN55+ZQrC1aWvEq3u2gtg1QYwsGttSQ0CJQRh4CC/77tI1/qh
      N/RPxJh2hPUZFnpKsCBMcVEqG1Zuo/CmlsusWr0fs4eZQN9o2rRLQl8O8pUljfuM5oH8uew8
      fZm+DzxIs/iSe5+TthWTqpARI7o49XqyApCp2AgCBvfbZ/iPrd/iHgpzL9HywIgHeO2tCSwz
      hNO0QW08DBrsxUWcOvwH+84UMHTcG7hKLAgMoCDzIO9Nn0ezPu0xqK7vXw7ZOZmcPX0am8VD
      QsV/rqF19WfAExNomryHzz+fztqARB55eCBlFfwsKwAZmQqKT2xzpr0Tw/Hjxzl+4jQ5OUWo
      NQaadH+Yh2PjCPWTnN8TAJ6BjRg7ujvrjhXSZuBgWiVEldY8OIMibx0jJzwmyWpgVxAUaqrF
      N2XC5JpsW/Ut08Y/S0S9cGyKJKdfS1YAMjIVFdFOQV4edpUHbXsMxM/9+hLoIpfPnkVfLUxy
      qwCV1ovOQ58mMeUAX342m1/W1GDY0MHESCvb311R6z1p2/cxEpoc5+t5czDGO9/VQVYAMk7n
      bI6ZE5crZ2RqsIeG+ICKsaV8+NdveWvez5jMJvCIZNzkyTSKuDL3dfDrpwup/vLLJCik9xoL
      goLA6ATGTZnOzpVf8PZLz1OnQyNyi6tY1LegwCukBk9Oehe7w/k+v9J7cmTKncJiOxfzb3Rk
      qxzo1RVlU7WI1av38Ozb80kM0rJlyQzemjKDDz58lSCD82vDVlgUGhr3GEmdZh35et77pDmi
      q6TroiAoUClFCrPTKVZ74u2qdUoQYFX8LWVkKgEZWFVxRAa7ISg1tBrwNH2i0vnf3DXYqmDw
      l8EnnJETZzB3+ijcKebssTOYy1uoe46djQsm0XfIY6zYdQLzbavF/X1kBSAjUyHxRavJoLCw
      xNdFULnQ/+mJOLbN4ctNR7FXQSUAAiq1GoEcfv78Z0lGAN8ZFT3GzuTdMb3Zs3QWc7/77aaA
      sX/+H2VkZCogbtSLUrPmt0OM7FwXQRDQeUYx+c3xjBg2jAPdH8E7LYfq5S1mGSCKIojiHVIe
      36lNGlzN0SmKiIJwNQ5EUGpp0L4PDdr3ccp1ZAUgI1NBaTdwODnLd5Jlqo2voST4zSe2Fd+t
      /oFF8xeww2rAXYLZ4HJTt9ElqQdnlG7cekvGjn9sPwbca8HuEaaccyya9wnfr/iFE+fTMVsU
      hMfXp1vfwTz1SH88Nc4z3MgKQEamgiLoA+k/sNdNxzXuIQwb8wpDHQ4ECUYCe/olMKR/c47G
      jGbGY61vcUY6c6b+dM/luhfY88/w8tgXiej6KItWvIg17SALfjnN6CGt2bD0c4YPe55PPp9B
      gJP8ACSvAETRwr7N6zh+2YJaYUfnF02bJgkYNAqs+ZdY9OW36IPD0VCysHTYBGo1aUONUK8q
      mWpXpnIgCAKCUkJpkK9D0Lgy9LkJdO/7Cice7Eg93xuHKT0qCSo+gEObVhPTfxyPdU1AKQiI
      2ihc8v7E7hNCn0cnEB/4Lgt/PsqEfjXlmsB3RRRJ27eBvXk+3N+7MRrBxt5ff2LTn250bhIL
      ogOUvnTs0wdvQBQdmPLO8fm3q6k2YhCuGmm+YDIyFRsBj7AmvDXlEbLTMhB9g28Y7LRE1ozE
      iWnxKwyFhQ5Ca/uWRj6DoFKhKiigAPAWlMR17kDR6wex96vplMFb0gpAdNjYses4LYaMRqdW
      ABrq1k/gy5WHyK8fc1MGSUFQYPAIRGnOotjhwNVphddkqgr2S4cQjVnlLcY/R21AVa1heUtx
      FUGpoXnPh2/T6kmX+7tK0oUxrm4kby9fT7OYh/AxKEk7/AdH0TGytL34wgWEwECn9V3SCsBh
      N5NqUtPV/dpArvbyQVecR6HRdjWlMJTM/i2mIk7t34YuKhF3taR/GpkyonjnJ9hTNpW3GP8Y
      hVckqmHLy1uMv4mAUqLmL9/4tjT/fQbPjhyGQmHHLLgwdMwUSpKAOEg5lkO7Lh1lBfB3EMVi
      itFxfQYVFFrUKgdWqxU0YC68wNply9AhYi4qQuUeSMc2DVFJLL+KjIxMJUChp8fI8SS2Sebc
      5UJCYuIJD7iSA0hBfJehxDvxcpJWAIKgQYuFYrhmL3RYsNkUqFQlXde5htKpTx+8RBG7xcS5
      U4dY99Nqeg/qgYe8ByAj8/ewGsFSVN5S/DtUOtBWnMyqgkJNtep1qHYPgjwkrQAUSh2BOgsX
      Cx1EuZYsmmx52Zg0brga1FwfSy4IAiqtgaj4RiRvn8XZfAt1faVWbkJGpoxI/QNSfilvKf4d
      wQ0grmd5S1EuSFoBCAoVjepHsGnbfqp1TEAlOEg+sB+f6Hg8tAL2G5KJiKKI3VJARpGC2lp5
      9i8jI3N3zFYTdkflLE8jaQWAoKBaw27U2vATS39IQY0VhUc497WpjgKwU1J+rmQPoIRik5HY
      9j0Jca1CGRdlZGT+Ne9vns6B1L3lLca/QtoKABAEJUkd+nKrWjpqj2BGPTf+nsskIyMjUxGQ
      oiutjIyMjMzfQFYAMjIyMlUUyZuAnIHdbr+WnrUUURSx2Wy3/Y5eo6R57ZCyFq1M8HDR3bFv
      d8NVDWHulfPR8tIp/lPfCUxEUFTCJAWu/v+t31pv8HGmh/o9xBAI/6Hvcb410SsNThTo3iGI
      N45sMjdhsVhuUgAyMjIylR1ZAfxLrFYranXV8xSy2+3Y7XY0Gk15i3LPsVqtJfEiqsq5uvm3
      yPdcuvdc3gP4l1RVvSmKIg7Hf69FWhkRRbFK3veq2m8Ah8Mh6b7LCkBGRkamiiIrABkZGZkq
      iqwAZGRkZKoo0tzZuAdINR/53VAoFJLdELsbVfmeV1VUKhWChGvDyl5AMjIyMlWUqqvaZWRk
      ZKo4sgKQkZGRqaJUTWNuBSTv0gFW/pbP/f1a/OX4j18uoFGfBwl21WI15rBn+3bSCyyIDhFR
      qaRaXCINa1S79gVrFl99NI98/wYMH9QBfSVQ8aK9mEO7fuNEWi6CQoFSqSK6bhNqhftycvvP
      pOjrc19C6LUv5Jzii/Un6dunE64q+GPVAlYeMHH/oyOJ8blWAHTVwgXED3qICENFDWASybl4
      kl37kjFZ7YiAUqUjpnYSNSL8UJDHd58swuIdgEFdciMdIkTUaUJSbBAARzcvYdMpO4FeOkDE
      IaqIrtOQurFBlWB2l8OSz9fTrl8ffF1V5F86yvx5i6nWsh8D2tS5elbm0c1svuRL77a1UJLP
      srmLKPLwx0WjQBRFXLxDaNw4CU995RjORHsxJ/bv5vDpdFAqUSoUhMU3oW6M/9V7dmTz9yzd
      fpH+Qx+hZpDrte9e2s/Ls5fQqMdIejSO5Erl2vMHfmFffgQ9WsT+I1kqxy9WBXA4rBQZi286
      bioqxO4QATt/blpLoX8SXdtEoxZETEV5XMqx/OX87DPJ2EPr4ZZzjtRsI9G+FT1HiYM/N/5M
      ui6OTt1aYtCosJgLMNlKoqytxUbMyhvytDhsFBrNXNm9KrYKREf6sOP3P4ns0YwrW7WmwkJs
      FXiLK/fCEVZtOUbLTh0J8XZFgYixIJc80xWZHVgFA6079iDUS4MoOjBmp/LD0tWEho0gQAs2
      s5GI+l3okhCAKDow5aayYvk6XDwGEOtf0e+9HWOREUfpPXLYraj9wrGl/MHZ+nGEu5cobrvV
      jLHYWvodBxZBR8uOPQjzUmOzmDh3ZA8//vwLA/t3wVDR9+lFG8d2beBggS9duvbERafCVmyk
      sFjk6lazNY8jZ4toGB/IoeSz1Ayqde37DivuEbXI2LuZy7VDCSitW2K3mDFd/Y3+PhV/kiBT
      ioUL6QWEBgegUSoQFEoMbt5EhQX+5ayjh44RXacBtatpST6dXk6y/n0cBefYc1ageaNauGjV
      CIKAVu+Op9s/KMcpKAitkYRHXjJHUytJXVpHMft2/0FUg1aE+bihFAQEQYGLuzfBAT63fDEF
      QYHB3Qs3ZSE5xtu0e4UQ5a3ibEZ2mXehLNC4BdCyfiibtuzlbqpbEATUWgNR9ZpSU5fOb0cr
      /vNuyU9n97Fc2rRKwlVf8ryrdS54ebheVQB5qaco0oWQ1KAeeaePUnBDsTGVIZDWdT3ZsvsY
      tv8YlC8rgEqDlsgQV/bs2Ud2genWL4c1i+MZSqoHexJRPY5Lx5MxVvCsDZmnj6EPjcFV89+m
      bgqtO00ax7Nz6w6sFXfSfxWHMYfz2RBRzedvnS+KIlZzEaeP7iVLF024x23OsxWTY7Li6VrR
      Z/+3QyCoRgPcMg9yItN899MpKaJeq04sx5NPlrFs/53czLPYXavhq7v983762DGCYqvj6xeM
      nyqX05cKbzonMqkVlpRdXMg1/Sd5ZBNQpUFB3VbdUf65k7XLf8IjIJT4GnGEBPmiLjUE5pw+
      DAGxeBrUqIMjMZj3czHLRKxfxS1uX1hQgN4tFuXtXK0dNpL3bMZ+8bqSe6ZsjMWeN5wo4BNZ
      j7A/FrH3XB6NbjdCVhBsFgs2hwa9vqTj2Wf2s3lvCg5LEbrgJDq3rIkSsBVeZuPa5bhpBSwm
      I+i9aNuh1V/2dvIzL3H+vAXRbuH8iSMUedakRahX+XTMCSh1HrRqHs+PG7cTPbDt3/qO2t0N
      a/7FMpbsv2MpykftEsjtHnfRlkfyBTNNG/ghqHXUjPLhz2OnqRtS5y/nKbTetEqqxrYdBwnu
      3PBfyyMrgEqESudGvWYdqNOomNRzp9j321oOBCfSvUUtFIgcPnAI39AO5GZmABDgauNwSiqx
      ftHlLPnt0en1FGcV4RC5uqH1FxQqajRoQc9GEdeOZR3joxXJtzhVT5NWjfhq3RYSHu5RZjI7
      A6VKhVKwUmwRQSPgHVGPPhH1KDy5hUX7866u8FSufrTq1INQLzU2i5nU08n8tm4l+r4DCHIp
      mUUW5mZy4eQFNv22n8bdh9CtbsTVSUHlRMA7MpHA3xdyKK0JgXf/AvYiI0qDS5lL9l9R6wzY
      TCUr+FvdoYKLJ8gW3RAsBWRkFKDyCiBj8yGK2tTB5QZ7TbXaTdAe+I5T6TX4t1M82QRUQVAo
      NAhY+YvFRrRgQYP2hkhMhUpLaFQ8nbp3IX3XVnIB0Z7HyXQHrsUZnDhxghMnTiB4BJB+IhlT
      BTYD+VWLIOfcSYz/1ZhZimtgTeq4ZbD9ZJZT/l9ZoXTxwM9g4WJq/t/8hoBKoyeseh2iPUwc
      PZd7tSU4pjZN23bloZ5NOb5vN+l55rvazys6CpWONh2bsm3tr9ju0hlRtHHi6Ekiq1fcic4V
      3LxDsWWfJs96q+dd5FTySbz83Dl/quQdTsu14qnI5mTaLTZ9VG60aFydPTv2YnL8uzsuK4AK
      gotHCG7WC5y8bCxNv+sg5+w+bB6xuOvUQDHpqZkU2+xX0/NazQXYdK7oRJH8lP0Q3pSWrVrQ
      vHlzmjdvTtv2bfG1X+Lc5b9nSy0P1H41qOuZy67D57CVpt512K1YrPa7f/kWCAo1jdu3Ye/6
      tZj/5UtxT1C60LBRXfb/vpkck/XqPbXfIdW2KIrYLSYycox4ud9o4xcIrduGrgk+/LjsZ9Ly
      iiu5EhBwCaxLDVUKe87lc0tnLlFEdNjJOXeE3Wk6WtWt+BX4DN6hJIar2bzzGDb7lefdhsVq
      Q3QUknyhmLZt2lx9h5s3b02bpAgOHj5xy//nH5uEr/EUh8/9u01/2QRUQVDpvejSpRVr1i3j
      oIsBhd1GoUVD9x5d0akEQODy6X1s3pqNSq1GoQCrDdr37oEe2PPnYeIaP4zq+nWl2oOaYW4c
      PnmOuIDq5dSzu6GkVY/+bN24gR9O7EGjVuGw26hWuwUN4/7O4v9mVB6RtArfwsI1+TR2srTO
      xDe6Ph2tf7L6+yVoXQ0oBbBabNSv0+zqzOzKHoC7TomIA6vJjGtMG+qG3GrRLxCW0JYu1nUs
      /uY77n9gIAFuFTUG4u4ICiWtunXizTdmE9L2mn+7rSibTWuX46FTIop20HrSZ1AfKkUVUoWG
      eq274fh9A99/fxitVgV2K/7Vm1LXPZUi9zA8Xf96z3xjalHwzTaMHevdbOpR6GnWMpFZH39J
      ZIdG/1ic/we2e7/cXiVvRwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Question_3' width='384'>
      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
      Eix4MyOwCAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
